{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/feed/FeedPost.js\";\nimport { Button, Divider, Hidden, TextField, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFeedPostStyles } from \"../../styles\";\nimport UserCard from \"../shared/UserCard\";\nimport { MoreIcon, CommentIcon, ShareIcon, UnlikeIcon, LikeIcon, SaveIcon, RemoveIcon } from \"../../icons\";\nimport HTMLEllipsis from \"react-lines-ellipsis/lib/html\";\nimport FollowSuggestions from \"../shared/FollowSuggestions\";\nimport OptionDialog from \"../shared/OptionsDialog\";\nimport { formatDateToNow } from \"../../utils/formatDate\";\nimport Img from 'react-graceful-image';\nimport { SAVE_POST, UNSAVE_POST, LIKE_POST, UNLIKE_POST, CREATE_COMMENT } from '../../graphql/mutations';\nimport { GET_FEED } from '../../graphql/queries';\nimport { useMutation } from \"@apollo/client\";\nimport { UserContext } from \"../../App\";\n\nfunction FeedPost({\n  post,\n  index\n}) {\n  const classes = useFeedPostStyles();\n  const [showCaption, setShowCaption] = React.useState(false);\n  const {\n    id,\n    media,\n    likes,\n    user,\n    caption,\n    created_at,\n    comments,\n    likes_aggregate,\n    saved_posts,\n    location,\n    comments_aggregate\n  } = post;\n  const showFollowingSuggestions = index === 1;\n  const [showOptionDialog, setShowOptionDialog] = React.useState(false);\n  const likesCount = likes_aggregate.aggregate.count;\n  const commentsCount = comments_aggregate.aggregate.count;\n  return React.createElement(React.Fragment, null, React.createElement(\"article\", {\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(UserCard, {\n    user: user,\n    location: location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(MoreIcon, {\n    className: classes.MoreIcon,\n    onClick: () => setShowOptionDialog(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Img, {\n    src: media,\n    alt: \"Post media\",\n    className: classes.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.postButtonsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(LikeButton, {\n    likes: likes,\n    postId: id,\n    authorId: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: `/p/${id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CommentIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(ShareIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(SaveButton, {\n    savedPosts: saved_posts,\n    postId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    className: classes.likes,\n    variant: \"subtitle2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, likesCount === 1 ? \"1 like\" : `${likesCount} likes`)), React.createElement(\"div\", {\n    className: showCaption ? classes.expanded : classes.collapsed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/${user.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"span\",\n    className: classes.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, user.username)), showCaption ? React.createElement(React.Fragment, null, React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    dangerouslySetInnerHTML: {\n      __html: caption\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.moreButton,\n    onClick: () => setShowCaption(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"less\")) : React.createElement(\"div\", {\n    className: classes.captionWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(HTMLEllipsis, {\n    unsafeHTML: caption,\n    className: classes.caption,\n    maxLine: \"0\",\n    ellipsis: \"...\",\n    basedOn: \"letters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.moreButton,\n    onClick: () => setShowCaption(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"more\"))), React.createElement(Link, {\n    to: `/p/${id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.comentsLink,\n    variant: \"body2\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"View all \", commentsCount, \" comments\")), comments.map(comment => React.createElement(\"div\", {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/${comment.user.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"span\",\n    className: classes.commentUsername,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, comment.user.username), \" \", React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, comment.content)))), React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: classes.datePosted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, formatDateToNow(created_at))), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Comment, {\n    postId: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))), showFollowingSuggestions && React.createElement(FollowSuggestions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), showOptionDialog && React.createElement(OptionDialog, {\n    authorId: user.id,\n    postId: id,\n    onClose: () => setShowOptionDialog(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }));\n}\n\nconst LikeButton = ({\n  likes,\n  postId,\n  authorId\n}) => {\n  const classes = useFeedPostStyles();\n  const {\n    currentUserId,\n    feedIds\n  } = React.useContext(UserContext);\n  const isAlreadyLiked = likes.some(({\n    user_id\n  }) => user_id === currentUserId);\n  const [liked, setLiked] = React.useState(isAlreadyLiked);\n  const Icon = liked ? UnlikeIcon : LikeIcon;\n  const className = liked ? classes.liked : classes.like;\n  const [likePost] = useMutation(LIKE_POST);\n  const [unlikePost] = useMutation(UNLIKE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId,\n    profileId: authorId\n  };\n\n  function handleUpdate(cache, result) {\n    var _result$data$insert_l;\n\n    const variables = {\n      limit: 2,\n      feedIds\n    };\n    const data = cache.readQuery({\n      query: GET_FEED,\n      variables\n    }); // console.log({ result, data });\n\n    const typename = (_result$data$insert_l = result.data.insert_likes) === null || _result$data$insert_l === void 0 ? void 0 : _result$data$insert_l.__typename;\n    const count = typename === 'likes_mutation_response' ? 1 : -1;\n    const posts = data.posts.map(post => {\n      const newPost = { ...post,\n        likes_aggregate: { ...post.likes_aggregate,\n          aggregate: { ...post.likes_aggregate.aggregate,\n            count: post.likes_aggregate.aggregate.count + count\n          }\n        }\n      };\n      return post.id === postId ? newPost : post;\n    });\n    cache.writeQuery({\n      query: GET_FEED,\n      data: {\n        posts\n      }\n    });\n  }\n\n  const handleLike = () => {\n    setLiked(true);\n    likePost({\n      variables,\n      update: handleUpdate\n    });\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    unlikePost({\n      variables,\n      update: handleUpdate\n    });\n  };\n\n  const onClick = liked ? handleUnlike : handleLike;\n  return React.createElement(Icon, {\n    className: className,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  });\n};\n\nconst SaveButton = ({\n  postId,\n  savedPosts\n}) => {\n  const classes = useFeedPostStyles();\n  const {\n    currentUserId\n  } = React.useContext(UserContext);\n  const isAlreadySaved = savedPosts.some(({\n    user_id\n  }) => user_id === currentUserId);\n  const [saved, setSaved] = React.useState(isAlreadySaved);\n  const Icon = saved ? RemoveIcon : SaveIcon;\n  const [savePost] = useMutation(SAVE_POST);\n  const [removePost] = useMutation(UNSAVE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId\n  };\n\n  const handleSave = () => {\n    setSaved(true);\n    savePost({\n      variables\n    });\n  };\n\n  const handleRemove = () => {\n    setSaved(false);\n    removePost({\n      variables\n    });\n  };\n\n  const onClick = saved ? handleRemove : handleSave;\n  return React.createElement(Icon, {\n    className: classes.saveIcon,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  });\n};\n\nconst Comment = ({\n  postId\n}) => {\n  const {\n    currentUserId,\n    feedIds\n  } = React.useContext(UserContext);\n  const classes = useFeedPostStyles();\n  const [content, setContent] = React.useState('');\n  const [createComment] = useMutation(CREATE_COMMENT);\n\n  function handleUpdate(cache, result) {\n    const variables = {\n      limit: 2,\n      feedIds\n    };\n    const data = cache.readQuery({\n      query: GET_FEED,\n      variables\n    }); // console.log({ result, data });\n\n    const oldComment = result.data.insert_comments.returning[0];\n    const newComment = { ...oldComment,\n      user: { ...oldComment.user\n      }\n    };\n    const posts = data.posts.map(post => {\n      const newPost = { ...post,\n        comments: [...post.comments, newComment],\n        comments_aggregate: { ...post.comments_aggregate,\n          aggregate: { ...post.comments_aggregate.aggregate,\n            count: post.comments_aggregate.aggregate.count + 1\n          }\n        }\n      };\n      return post.id === postId ? newPost : post;\n    });\n    cache.writeQuery({\n      query: GET_FEED,\n      data: {\n        posts\n      }\n    });\n    setContent('');\n  }\n\n  function handleAddComment() {\n    const variables = {\n      content,\n      postId,\n      userId: currentUserId\n    };\n    createComment({\n      variables,\n      update: handleUpdate\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.commentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    value: content,\n    placeholder: \"Add a comment\",\n    multiline: true,\n    rowsMax: 2,\n    rows: 1,\n    className: classes.textField,\n    onChange: event => setContent(event.target.value),\n    InputProps: {\n      classes: {\n        root: classes.root,\n        underline: classes.underline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    className: classes.commentButton,\n    disabled: !content.trim(),\n    onClick: handleAddComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"Post\"));\n};\n\nexport default FeedPost;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/feed/FeedPost.js"],"names":["Button","Divider","Hidden","TextField","Typography","React","Link","useFeedPostStyles","UserCard","MoreIcon","CommentIcon","ShareIcon","UnlikeIcon","LikeIcon","SaveIcon","RemoveIcon","HTMLEllipsis","FollowSuggestions","OptionDialog","formatDateToNow","Img","SAVE_POST","UNSAVE_POST","LIKE_POST","UNLIKE_POST","CREATE_COMMENT","GET_FEED","useMutation","UserContext","FeedPost","post","index","classes","showCaption","setShowCaption","useState","id","media","likes","user","caption","created_at","comments","likes_aggregate","saved_posts","location","comments_aggregate","showFollowingSuggestions","showOptionDialog","setShowOptionDialog","likesCount","aggregate","count","commentsCount","article","postHeader","image","postButtonsWrapper","postButtons","expanded","collapsed","username","__html","moreButton","captionWrapper","comentsLink","map","comment","commentUsername","content","datePosted","LikeButton","postId","authorId","currentUserId","feedIds","useContext","isAlreadyLiked","some","user_id","liked","setLiked","Icon","className","like","likePost","unlikePost","variables","userId","profileId","handleUpdate","cache","result","limit","data","readQuery","query","typename","insert_likes","__typename","posts","newPost","writeQuery","handleLike","update","handleUnlike","onClick","SaveButton","savedPosts","isAlreadySaved","saved","setSaved","savePost","removePost","handleSave","handleRemove","saveIcon","Comment","setContent","createComment","oldComment","insert_comments","returning","newComment","handleAddComment","commentContainer","textField","event","target","value","root","underline","commentButton","trim"],"mappings":"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","sourcesContent":["import { Button, Divider, Hidden, TextField, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFeedPostStyles } from \"../../styles\";\nimport UserCard from \"../shared/UserCard\";\nimport { MoreIcon, CommentIcon, ShareIcon, UnlikeIcon, LikeIcon, SaveIcon, RemoveIcon } from \"../../icons\";\nimport HTMLEllipsis from \"react-lines-ellipsis/lib/html\";\nimport FollowSuggestions from \"../shared/FollowSuggestions\";\nimport OptionDialog from \"../shared/OptionsDialog\";\nimport { formatDateToNow } from \"../../utils/formatDate\";\nimport Img from 'react-graceful-image';\nimport { SAVE_POST, UNSAVE_POST, LIKE_POST, UNLIKE_POST, CREATE_COMMENT } from '../../graphql/mutations'\nimport { GET_FEED } from '../../graphql/queries';\nimport { useMutation } from \"@apollo/client\";\nimport { UserContext } from \"../../App\";\n\n\n\n\nfunction FeedPost({ post, index }) {\n  const classes = useFeedPostStyles();\n  const [showCaption, setShowCaption] = React.useState(false);\n  const { id, media, likes, user, caption, created_at, comments, likes_aggregate, saved_posts, location, comments_aggregate } = post;\n  const showFollowingSuggestions = index === 1;\n  const [showOptionDialog, setShowOptionDialog] = React.useState(false);\n  const likesCount = likes_aggregate.aggregate.count;\n  const commentsCount = comments_aggregate.aggregate.count;\n\n  return (\n    <>\n      <article className={classes.article}>\n        {/* Feed Post Header */}\n        <div className={classes.postHeader}>\n          <UserCard user={user} location={location} />\n          <MoreIcon\n            className={classes.MoreIcon}\n            onClick={() => setShowOptionDialog(true)}\n          />\n        </div>\n        {/* Feed Post Image */}\n        <div>\n          <Img src={media} alt=\"Post media\" className={classes.image} />\n        </div>\n        {/* Feed Post Button */}\n        <div className={classes.postButtonsWrapper}>\n          <div className={classes.postButtons}>\n            <LikeButton likes={likes} postId={id} authorId={user.id} />\n            <Link to={`/p/${id}`}>\n              <CommentIcon />\n            </Link>\n            <ShareIcon />\n            <SaveButton savedPosts={saved_posts} postId={id} />\n          </div>\n          {/* Post Likes Count */}\n          <Typography className={classes.likes} variant=\"subtitle2\">\n            <span>{likesCount === 1 ? \"1 like\" : `${likesCount} likes`}</span>\n          </Typography>\n          {/* Post Caption with Expand and Collapse option */}\n          <div className={showCaption ? classes.expanded : classes.collapsed}>\n            <Link to={`/${user.username}`}>\n              <Typography variant=\"subtitle2\" component=\"span\" className={classes.username}>\n                {user.username}\n              </Typography>\n            </Link>\n            {showCaption ? (\n              <>\n                <Typography\n                  variant=\"body2\"\n                  component=\"span\"\n                  dangerouslySetInnerHTML={{ __html: caption }}\n                />\n                <Button\n                  className={classes.moreButton}\n                  onClick={() => setShowCaption(false)}\n                >\n                  less\n                </Button>\n              </>\n            ) : (\n              <div className={classes.captionWrapper}>\n                <HTMLEllipsis\n                  unsafeHTML={caption}\n                  className={classes.caption}\n                  maxLine=\"0\"\n                  ellipsis=\"...\"\n                  basedOn=\"letters\"\n                />\n                <Button\n                  className={classes.moreButton}\n                  onClick={() => setShowCaption(true)}\n                >\n                  more\n                </Button>\n              </div>\n            )}\n          </div>\n          {/* Post Comment Area */}\n          <Link to={`/p/${id}`}>\n            <Typography\n              className={classes.comentsLink}\n              variant=\"body2\"\n              component=\"div\"\n            >\n              View all {commentsCount} comments\n            </Typography>\n          </Link>\n          {comments.map(comment => (\n            <div key={comment.id}>\n              <Link to={`/${comment.user.username}`}>\n                <Typography\n                  variant=\"subtitle2\"\n                  component=\"span\"\n                  className={classes.commentUsername}\n                >\n                  {comment.user.username}\n                </Typography>{\" \"}\n                <Typography\n                  variant=\"body2\"\n                  component=\"span\"\n                >\n                  {comment.content}\n                </Typography>\n              </Link>\n            </div>\n          ))}\n          <Typography color=\"textSecondary\" className={classes.datePosted}>\n            {formatDateToNow(created_at)}\n          </Typography>\n        </div>\n        <Hidden xsDown>\n          <Divider />\n          <Comment postId={post.id} />\n        </Hidden>\n      </article>\n      {showFollowingSuggestions && <FollowSuggestions />}\n      {showOptionDialog && <OptionDialog authorId={user.id} postId={id} onClose={() => setShowOptionDialog(false)} />}\n    </>\n  )\n}\n\nconst LikeButton = ({ likes, postId, authorId }) => {\n  const classes = useFeedPostStyles();\n  const { currentUserId, feedIds } = React.useContext(UserContext);\n  const isAlreadyLiked = likes.some(({ user_id }) => user_id === currentUserId);\n\n  const [liked, setLiked] = React.useState(isAlreadyLiked);\n  const Icon = liked ? UnlikeIcon : LikeIcon;\n  const className = liked ? classes.liked : classes.like;\n  const [likePost] = useMutation(LIKE_POST)\n  const [unlikePost] = useMutation(UNLIKE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId,\n    profileId: authorId\n  }\n\n  function handleUpdate(cache, result) {\n    const variables = { limit: 2, feedIds };\n    const data = cache.readQuery({\n      query: GET_FEED,\n      variables\n    })\n    // console.log({ result, data });\n    const typename = result.data.insert_likes?.__typename;\n    const count = typename === 'likes_mutation_response' ? 1 : -1;\n    const posts = data.posts.map(post => {\n      const newPost = {\n        ...post,\n        likes_aggregate: {\n          ...post.likes_aggregate,\n          aggregate: {\n            ...post.likes_aggregate.aggregate,\n            count: post.likes_aggregate.aggregate.count + count\n          }\n        }\n      }\n      return post.id === postId ? newPost : post\n    });\n    cache.writeQuery({ query: GET_FEED, data: { posts } })\n  }\n\n  const handleLike = () => {\n    setLiked(true)\n    likePost({ variables, update: handleUpdate })\n  }\n\n  const handleUnlike = () => {\n    setLiked(false);\n    unlikePost({ variables, update: handleUpdate })\n  }\n\n  const onClick = liked ? handleUnlike : handleLike;\n\n\n  return <Icon className={className} onClick={onClick} />\n}\n\nconst SaveButton = ({ postId, savedPosts }) => {\n  const classes = useFeedPostStyles();\n  const { currentUserId } = React.useContext(UserContext);\n  const isAlreadySaved = savedPosts.some(({ user_id }) => user_id === currentUserId);\n  const [saved, setSaved] = React.useState(isAlreadySaved);\n  const Icon = saved ? RemoveIcon : SaveIcon;\n\n  const [savePost] = useMutation(SAVE_POST);\n  const [removePost] = useMutation(UNSAVE_POST);\n\n  const variables = {\n    postId,\n    userId: currentUserId\n  }\n  const handleSave = () => {\n    setSaved(true)\n    savePost({ variables })\n  }\n\n  const handleRemove = () => {\n    setSaved(false);\n    removePost({ variables })\n  }\n\n  const onClick = saved ? handleRemove : handleSave;\n\n  return <Icon className={classes.saveIcon} onClick={onClick} />\n}\n\nconst Comment = ({ postId }) => {\n  const { currentUserId, feedIds } = React.useContext(UserContext);\n  const classes = useFeedPostStyles();\n  const [content, setContent] = React.useState('');\n  const [createComment] = useMutation(CREATE_COMMENT);\n\n  function handleUpdate(cache, result) {\n    const variables = { limit: 2, feedIds }\n    const data = cache.readQuery({\n      query: GET_FEED,\n      variables\n    })\n    // console.log({ result, data });\n    const oldComment = result.data.insert_comments.returning[0];\n    const newComment = {\n      ...oldComment,\n      user: { ...oldComment.user }\n    }\n    const posts = data.posts.map(post => {\n      const newPost = {\n        ...post,\n        comments: [...post.comments, newComment],\n        comments_aggregate: {\n          ...post.comments_aggregate,\n          aggregate: {\n            ...post.comments_aggregate.aggregate,\n            count: post.comments_aggregate.aggregate.count + 1\n          }\n        }\n      };\n      return post.id === postId ? newPost : post;\n    })\n    cache.writeQuery({ query: GET_FEED, data: { posts } })\n    setContent('');\n  }\n\n  function handleAddComment() {\n    const variables = {\n      content,\n      postId,\n      userId: currentUserId\n    }\n    createComment({ variables, update: handleUpdate })\n  }\n\n  return (\n    <div className={classes.commentContainer}>\n      <TextField\n        fullWidth\n        value={content}\n        placeholder=\"Add a comment\"\n        multiline\n        rowsMax={2}\n        rows={1}\n        className={classes.textField}\n        onChange={event => setContent(event.target.value)}\n        InputProps={{\n          classes: {\n            root: classes.root,\n            underline: classes.underline\n          }\n        }}\n      />\n      <Button\n        color=\"primary\"\n        className={classes.commentButton}\n        disabled={!content.trim()}\n        onClick={handleAddComment}\n      >\n        Post\n      </Button>\n    </div>)\n}\n\nexport default FeedPost;\n"]},"metadata":{},"sourceType":"module"}