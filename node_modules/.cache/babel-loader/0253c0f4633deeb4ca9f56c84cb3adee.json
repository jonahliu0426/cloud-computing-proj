{"ast":null,"code":"import { gql } from \"@apollo/client\";\nexport const CREATE_USER = gql`\n    mutation createUsers($userId: String!, $name: String!, $username: String!, $email: String!, $bio: String!, $website: String!, $profileImage: String!, $phoneNumber: String!) {\n  insert_users(objects: {user_id: $userId, name: $name, username: $username, email: $email, bio: $bio, website: $website, profile_image: $profileImage, phone_number: $phoneNumber}) {\n    affected_rows\n  }\n}\n`;\nexport const EDIT_USER = gql`\nmutation editUser($id: uuid!, $name: String!, $username:String!, $website: String!, $bio: String!, $phoneNumber: String!, $email: String!) {\n  update_users(where: {id: {_eq: $id}}, _set: {name: $name, username: $username, website: $website, bio: $bio, email: $email, phone_number: $phoneNumber}) {\n    affected_rows\n  }\n}\n`;\nexport const EDIT_USER_AVATAR = gql`\nmutation editProfilePic($id: uuid!, $profileLink: String!) {\n  update_users(where: {id: {_eq: $id}}, _set: {profile_image: $profileLink}) {\n    affected_rows\n  }\n}\n`;\nexport const CREATE_POST = gql`\nmutation createPost($userId: uuid!, $media: String!, $location: String!, $caption: String!) {\n  insert_posts(objects: {caption: $caption, location: $location, media: $media, user_id: $userId}) {\n    affected_rows\n  }\n}`;\nexport const LIKE_POST = gql`\nmutation likePost($postId: uuid!, $userId: uuid!, $profileId: uuid!) {\n  insert_likes(objects: {post_id: $postId, user_id: $userId}) {\n    __typename\n  }\n  insert_notifications(objects: {post_id: $postId, profile_id: $profileId, type: \"like\", user_id: $userId}){\n    affected_rows\n  }\n}\n`;\nexport const UNLIKE_POST = gql`\nmutation unlikePost($postId: uuid!, $userId: uuid!, $profileId: uuid!) {\n  delete_likes(where: {post_id: {_eq: $postId}, user_id: {_eq: $userId}}) {\n    affected_rows\n  }\n  delete_notifications(where: {profile_id: {_eq: $profileId}, user_id: {_eq: $userId}, type: {_eq: \"like\"}, post_id: {_eq: $postId}}) {\n    affected_rows\n  }\n}\n`;\nexport const SAVE_POST = gql`\nmutation savePost($postId: uuid!, $userId: uuid!) {\n  insert_saved_posts(objects: {post_id: $postId, user_id: $userId}) {\n    affected_rows\n  }\n}\n`;\nexport const UNSAVE_POST = gql`\nmutation unsavePost($postId: uuid!, $userId: uuid!) {\n  delete_saved_posts(where: {post_id: {_eq: $postId}, user_id: {_eq: $userId}}) {\n    affected_rows\n  }\n}\n`;\nexport const CREATE_COMMENT = gql`\nmutation createComment($postId: uuid!, $userId: uuid!, $content: String!) {\n  insert_comments(objects: {post_id: $postId, user_id: $userId, content: $content}) {\n    returning {\n      id\n      created_at\n      post_id\n      user_id\n      content\n      user {\n        username\n      }\n    }\n  }\n}\n`;\nexport const CHECK_NOTIFICATIONS = gql`\n  mutation checkNotifications($userId: uuid!, $lastChecked: String!) {\n  update_users(\n    where: {id: {_eq: $userId}}, \n    _set: {last_checked: $lastChecked}\n    ) {\n      affected_rows\n  }\n}\n`;\nexport const FOLLOW_USER = gql`\nmutation followUser($userIdToFollow: uuid!, $currentUserId: uuid!) {\n  insert_followers(objects: {user_id: $userIdToFollow, profile_id: $currentUserId}) {\n    affected_rows\n  }\n  insert_following(objects: {user_id: $currentUserId, profile_id: $userIdToFollow}) {\n    affected_rows\n  }\n  insert_notifications(objects: {user_id: $currentUserId, profile_id: $userIdToFollow, type: \"follow\"}) {\n    affected_rows\n  }\n}\n`;\nexport const UNFOLLOW_USER = gql`\nmutation unfollowUser($userIdToUnfollow: uuid!, $currentUserId: uuid!) {\n  delete_following(where: {user_id: {_eq: $currentUserId} profile_id: {_eq: $userIdToUnfollow}}) {\n    affected_rows\n  }\n  delete_followers(where: {user_id: {_eq: $userIdToUnfollow} profile_id: {_eq: $currentUserId}}) {\n    affected_rows\n  }\n  delete_notifications(where: {\n    user_id: {_eq: $currentUserId}\n    profile_id: {_eq: $userIdToUnfollow}\n    type: {_eq: \"follow\"}\n  }){\n    affected_rows\n  }\n}\n`;\nexport const DELETE_POST = gql`\n  mutation deletePost($postId: uuid!, $userId: uuid!){\n    delete_posts(where: { id: {_eq: $postId}, user_id: {_eq: $userId}}){\n      affected_rows\n    }\n    delete_likes(where: { post_id: {_eq: $postId}}){\n      affected_rows\n    }\n    delete_saved_posts(where: { post_id: {_eq: $postId}}){\n      affected_rows\n    }\n    delete_comments(where: { post_id: {_eq: $postId}}){\n      affected_rows\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/graphql/mutations.js"],"names":["gql","CREATE_USER","EDIT_USER","EDIT_USER_AVATAR","CREATE_POST","LIKE_POST","UNLIKE_POST","SAVE_POST","UNSAVE_POST","CREATE_COMMENT","CHECK_NOTIFICATIONS","FOLLOW_USER","UNFOLLOW_USER","DELETE_POST"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;;;;;;CAAxB;AAQP,OAAO,MAAME,SAAS,GAAGF,GAAI;;;;;;CAAtB;AAQP,OAAO,MAAMG,gBAAgB,GAAGH,GAAI;;;;;;CAA7B;AAQP,OAAO,MAAMI,WAAW,GAAGJ,GAAI;;;;;EAAxB;AAOP,OAAO,MAAMK,SAAS,GAAGL,GAAI;;;;;;;;;CAAtB;AAWP,OAAO,MAAMM,WAAW,GAAGN,GAAI;;;;;;;;;CAAxB;AAWP,OAAO,MAAMO,SAAS,GAAGP,GAAI;;;;;;CAAtB;AAQP,OAAO,MAAMQ,WAAW,GAAGR,GAAI;;;;;;CAAxB;AAQP,OAAO,MAAMS,cAAc,GAAGT,GAAI;;;;;;;;;;;;;;;CAA3B;AAiBP,OAAO,MAAMU,mBAAmB,GAAGV,GAAI;;;;;;;;;CAAhC;AAWP,OAAO,MAAMW,WAAW,GAAGX,GAAI;;;;;;;;;;;;CAAxB;AAcP,OAAO,MAAMY,aAAa,GAAGZ,GAAI;;;;;;;;;;;;;;;;CAA1B;AAkBP,OAAO,MAAMa,WAAW,GAAGb,GAAI;;;;;;;;;;;;;;;CAAxB","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_USER = gql`\n    mutation createUsers($userId: String!, $name: String!, $username: String!, $email: String!, $bio: String!, $website: String!, $profileImage: String!, $phoneNumber: String!) {\n  insert_users(objects: {user_id: $userId, name: $name, username: $username, email: $email, bio: $bio, website: $website, profile_image: $profileImage, phone_number: $phoneNumber}) {\n    affected_rows\n  }\n}\n`\n\nexport const EDIT_USER = gql`\nmutation editUser($id: uuid!, $name: String!, $username:String!, $website: String!, $bio: String!, $phoneNumber: String!, $email: String!) {\n  update_users(where: {id: {_eq: $id}}, _set: {name: $name, username: $username, website: $website, bio: $bio, email: $email, phone_number: $phoneNumber}) {\n    affected_rows\n  }\n}\n`\n\nexport const EDIT_USER_AVATAR = gql`\nmutation editProfilePic($id: uuid!, $profileLink: String!) {\n  update_users(where: {id: {_eq: $id}}, _set: {profile_image: $profileLink}) {\n    affected_rows\n  }\n}\n`\n\nexport const CREATE_POST = gql`\nmutation createPost($userId: uuid!, $media: String!, $location: String!, $caption: String!) {\n  insert_posts(objects: {caption: $caption, location: $location, media: $media, user_id: $userId}) {\n    affected_rows\n  }\n}`\n\nexport const LIKE_POST = gql`\nmutation likePost($postId: uuid!, $userId: uuid!, $profileId: uuid!) {\n  insert_likes(objects: {post_id: $postId, user_id: $userId}) {\n    __typename\n  }\n  insert_notifications(objects: {post_id: $postId, profile_id: $profileId, type: \"like\", user_id: $userId}){\n    affected_rows\n  }\n}\n`\n\nexport const UNLIKE_POST = gql`\nmutation unlikePost($postId: uuid!, $userId: uuid!, $profileId: uuid!) {\n  delete_likes(where: {post_id: {_eq: $postId}, user_id: {_eq: $userId}}) {\n    affected_rows\n  }\n  delete_notifications(where: {profile_id: {_eq: $profileId}, user_id: {_eq: $userId}, type: {_eq: \"like\"}, post_id: {_eq: $postId}}) {\n    affected_rows\n  }\n}\n`\n\nexport const SAVE_POST = gql`\nmutation savePost($postId: uuid!, $userId: uuid!) {\n  insert_saved_posts(objects: {post_id: $postId, user_id: $userId}) {\n    affected_rows\n  }\n}\n`\n\nexport const UNSAVE_POST = gql`\nmutation unsavePost($postId: uuid!, $userId: uuid!) {\n  delete_saved_posts(where: {post_id: {_eq: $postId}, user_id: {_eq: $userId}}) {\n    affected_rows\n  }\n}\n`\n\nexport const CREATE_COMMENT = gql`\nmutation createComment($postId: uuid!, $userId: uuid!, $content: String!) {\n  insert_comments(objects: {post_id: $postId, user_id: $userId, content: $content}) {\n    returning {\n      id\n      created_at\n      post_id\n      user_id\n      content\n      user {\n        username\n      }\n    }\n  }\n}\n`\n\nexport const CHECK_NOTIFICATIONS = gql`\n  mutation checkNotifications($userId: uuid!, $lastChecked: String!) {\n  update_users(\n    where: {id: {_eq: $userId}}, \n    _set: {last_checked: $lastChecked}\n    ) {\n      affected_rows\n  }\n}\n`\n\nexport const FOLLOW_USER = gql`\nmutation followUser($userIdToFollow: uuid!, $currentUserId: uuid!) {\n  insert_followers(objects: {user_id: $userIdToFollow, profile_id: $currentUserId}) {\n    affected_rows\n  }\n  insert_following(objects: {user_id: $currentUserId, profile_id: $userIdToFollow}) {\n    affected_rows\n  }\n  insert_notifications(objects: {user_id: $currentUserId, profile_id: $userIdToFollow, type: \"follow\"}) {\n    affected_rows\n  }\n}\n`\n\nexport const UNFOLLOW_USER = gql`\nmutation unfollowUser($userIdToUnfollow: uuid!, $currentUserId: uuid!) {\n  delete_following(where: {user_id: {_eq: $currentUserId} profile_id: {_eq: $userIdToUnfollow}}) {\n    affected_rows\n  }\n  delete_followers(where: {user_id: {_eq: $userIdToUnfollow} profile_id: {_eq: $currentUserId}}) {\n    affected_rows\n  }\n  delete_notifications(where: {\n    user_id: {_eq: $currentUserId}\n    profile_id: {_eq: $userIdToUnfollow}\n    type: {_eq: \"follow\"}\n  }){\n    affected_rows\n  }\n}\n`\n\nexport const DELETE_POST = gql`\n  mutation deletePost($postId: uuid!, $userId: uuid!){\n    delete_posts(where: { id: {_eq: $postId}, user_id: {_eq: $userId}}){\n      affected_rows\n    }\n    delete_likes(where: { post_id: {_eq: $postId}}){\n      affected_rows\n    }\n    delete_saved_posts(where: { post_id: {_eq: $postId}}){\n      affected_rows\n    }\n    delete_comments(where: { post_id: {_eq: $postId}}){\n      affected_rows\n    }\n  }\n`"]},"metadata":{},"sourceType":"module"}