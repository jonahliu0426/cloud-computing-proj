{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/pages/feed.js\";\nimport React from \"react\";\nimport { useFeedPageStyles } from \"../styles\";\nimport Layout from \"../components/shared/Layout\";\nimport { Hidden } from \"@material-ui/core\";\nimport UserCard from \"../components/shared/UserCard\"; //import FeedPost from \"../components/feed/FeedPost\";\n\nimport FeedSideSuggestions from \"../components/feed/FeedSideSuggestions\";\nimport LoadingScreen from \"../components/shared/LoadingScreen\";\nimport { LoadingLargeIcon } from \"../icons\";\nimport FeedPostSkeleton from \"../components/feed/FeedPostSkeleton\";\nimport { UserContext } from \"../App\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_FEED } from \"../graphql/queries\";\nimport usePageBottom from \"../utils/usePageBottom\";\nconst FeedPost = React.lazy(() => import(\"../components/feed/FeedPost\"));\n\nfunction FeedPage() {\n  const classes = useFeedPageStyles();\n  const [isEndOfPage, setIsEndOfPage] = React.useState(false);\n  const {\n    me,\n    feedIds\n  } = React.useContext(UserContext);\n  const variables = {\n    limit: 2,\n    feedIds\n  };\n  const {\n    data,\n    loading,\n    fetchMore\n  } = useQuery(GET_FEED, {\n    variables\n  });\n  const isPageBottom = usePageBottom();\n  const handleUpdateQuery = React.useCallback((prev, {\n    fetchMoreResult\n  }) => {\n    console.log({\n      prev,\n      fetchMoreResult\n    });\n\n    if (fetchMoreResult.posts.length === 0) {\n      setIsEndOfPage(true);\n      return prev;\n    }\n\n    return {\n      posts: [...prev.posts, ...fetchMoreResult.posts]\n    };\n  }, []);\n  React.useEffect(() => {\n    if (!isPageBottom || !data) return;\n    const lastTimestamp = data.posts[data.posts.length - 1].created_at;\n    const variables = {\n      limit: 2,\n      feedIds,\n      lastTimestamp\n    };\n    fetchMore({\n      variables,\n      updateQuery: handleUpdateQuery\n    });\n  }, [isPageBottom, data, fetchMore, handleUpdateQuery, feedIds]); // let loading = false;\n\n  if (loading) return React.createElement(LoadingScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n  console.log('posts data', data);\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, data.posts.map((post, index) => React.createElement(React.Suspense, {\n    key: post.id,\n    fallback: React.createElement(FeedPostSkeleton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FeedPost, {\n    index: index,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })))), React.createElement(Hidden, {\n    smDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.sidebarContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(UserCard, {\n    user: me,\n    avatarSize: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(FeedSideSuggestions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })))), !isEndOfPage && React.createElement(LoadingLargeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })));\n}\n\nexport default FeedPage;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/pages/feed.js"],"names":["React","useFeedPageStyles","Layout","Hidden","UserCard","FeedSideSuggestions","LoadingScreen","LoadingLargeIcon","FeedPostSkeleton","UserContext","useQuery","GET_FEED","usePageBottom","FeedPost","lazy","FeedPage","classes","isEndOfPage","setIsEndOfPage","useState","me","feedIds","useContext","variables","limit","data","loading","fetchMore","isPageBottom","handleUpdateQuery","useCallback","prev","fetchMoreResult","console","log","posts","length","useEffect","lastTimestamp","created_at","updateQuery","container","map","post","index","id","sidebarContainer","sidebarWrapper"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFeedPageStyles } from \"../styles\";\nimport Layout from \"../components/shared/Layout\";\nimport { Hidden } from \"@material-ui/core\";\nimport UserCard from \"../components/shared/UserCard\";\n//import FeedPost from \"../components/feed/FeedPost\";\nimport FeedSideSuggestions from \"../components/feed/FeedSideSuggestions\"\nimport LoadingScreen from \"../components/shared/LoadingScreen\";\nimport { LoadingLargeIcon } from \"../icons\";\nimport FeedPostSkeleton from \"../components/feed/FeedPostSkeleton\";\nimport { UserContext } from \"../App\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_FEED } from \"../graphql/queries\";\nimport usePageBottom from \"../utils/usePageBottom\";\n\nconst FeedPost = React.lazy(() => import(\"../components/feed/FeedPost\"));\n\nfunction FeedPage() {\n  const classes = useFeedPageStyles();\n  const [isEndOfPage, setIsEndOfPage] = React.useState(false);\n  const { me, feedIds } = React.useContext(UserContext);\n  const variables = {\n    limit: 2,\n    feedIds\n  }\n  const { data, loading, fetchMore } = useQuery(GET_FEED, { variables });\n  const isPageBottom = usePageBottom();\n\n  const handleUpdateQuery = React.useCallback((prev, { fetchMoreResult }) => {\n    console.log({ prev, fetchMoreResult });\n    if (fetchMoreResult.posts.length === 0) {\n      setIsEndOfPage(true);\n      return prev;\n    }\n    return { posts: [...prev.posts, ...fetchMoreResult.posts] };\n  }, []);\n\n  React.useEffect(() => {\n    if (!isPageBottom || !data) return;\n    const lastTimestamp = data.posts[data.posts.length - 1].created_at;\n    const variables = { limit: 2, feedIds, lastTimestamp };\n    fetchMore({\n      variables,\n      updateQuery: handleUpdateQuery,\n    });\n  }, [isPageBottom, data, fetchMore, handleUpdateQuery, feedIds]);\n\n  // let loading = false;\n\n  if (loading) return <LoadingScreen />\n  console.log('posts data', data);\n  return (\n    <Layout>\n      <div className={classes.container}>\n        <div>\n          {data.posts.map((post, index) => (\n            <React.Suspense key={post.id} fallback={<FeedPostSkeleton />}>\n              <FeedPost index={index} post={post} />\n            </React.Suspense>\n          ))}\n        </div>\n        <Hidden smDown>\n          <div className={classes.sidebarContainer}>\n            <div className={classes.sidebarWrapper}>\n              <UserCard user={me} avatarSize={50} />\n              <FeedSideSuggestions />\n            </div>\n          </div>\n        </Hidden>\n        {!isEndOfPage && <LoadingLargeIcon />}\n      </div>\n    </Layout>\n  )\n}\n\nexport default FeedPage;\n"]},"metadata":{},"sourceType":"module"}