{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/pages/edit-profile.js\";\nimport React from \"react\";\nimport { useEditProfilePageStyles } from \"../styles\";\nimport Layout from \"../components/shared/Layout\";\nimport { IconButton, Hidden, Drawer, List, ListItem, ListItemText, Typography, TextField, Button, Snackbar, Slide } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport ProfilePicture from \"../components/shared/ProfilePicture\";\nimport { UserContext } from \"../App\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_EDIT_USER_PROFILE } from \"../graphql/queries\";\nimport LoadingScreen from \"../components/shared/LoadingScreen\";\nimport { useForm } from 'react-hook-form';\nimport isURL from \"validator/lib/isURL\";\nimport isEmail from \"validator/lib/isEmail\";\nimport isMobilePhone from \"validator/lib/isMobilePhone\";\nimport { EDIT_USER, EDIT_USER_AVATAR } from \"../graphql/mutations\";\nimport { AuthContext } from \"../auth\";\nimport handleImageUpload from \"../utils/handleImageUpload\";\n\nfunction EditProfilePage({\n  history\n}) {\n  const {\n    currentUserId\n  } = React.useContext(UserContext);\n  const variables = {\n    id: currentUserId\n  };\n  const {\n    data,\n    loading\n  } = useQuery(GET_EDIT_USER_PROFILE, {\n    variables\n  });\n  const classes = useEditProfilePageStyles();\n  const [showDrawer, setDrawer] = React.useState(false);\n  const path = history.location.pathname;\n\n  const handleToggleDrawer = () => {\n    setDrawer(prev => !prev);\n  };\n\n  const handleSelected = index => {\n    switch (index) {\n      case 0:\n        {\n          return path.includes('edit');\n        }\n\n      default:\n        break;\n    }\n  };\n\n  const handleListClick = index => {\n    switch (index) {\n      case 0:\n        {\n          history.push('/accounts/edit');\n          break;\n        }\n\n      default:\n        break;\n    }\n  };\n\n  const options = [\"Edit Profile\", \"Change Password\", \"Apps and Websites\", \"Email and SMS\", \"Push Notification\", \"Manage Contacts\", \"Privacy and Security\", \"Login Activity\", \"Emails from Instagram\"];\n  const drawer = React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, options.map((option, index) => React.createElement(ListItem, {\n    key: option,\n    button: true,\n    selected: handleSelected(index),\n    onClick: () => handleListClick(index),\n    classes: {\n      selected: classes.listItemSelected,\n      button: classes.listItemButton\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n  if (loading) return React.createElement(LoadingScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  });\n  return React.createElement(Layout, {\n    title: \"Edit Profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    onClick: handleToggleDrawer,\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: \"left\",\n    open: showDrawer,\n    onClose: handleToggleDrawer,\n    classes: {\n      paperAnchorLeft: classes.temporaryDrawer\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, drawer)), React.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\",\n    className: classes.permanentDrawerRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classes.permanentDrawerPaper,\n      root: classes.permanentDrawerRoot\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, drawer))), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, path.includes('edit') && React.createElement(EditUserInfo, {\n    user: data.users_by_pk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }))));\n}\n\nconst DEFAULT_ERROR = {\n  type: \"\",\n  message: \"\"\n};\n\nconst EditUserInfo = ({\n  user\n}) => {\n  const {\n    updateEmail\n  } = React.useContext(AuthContext);\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const classes = useEditProfilePageStyles();\n  const [editUser] = useMutation(EDIT_USER);\n  const [error, setError] = React.useState(DEFAULT_ERROR);\n  const [open, setOpen] = React.useState(false); // const [media, setMedia] = React.useState(null);\n\n  const [profileImage, setProfileImage] = React.useState(user.profile_image);\n  const [editUserAvatar] = useMutation(EDIT_USER_AVATAR);\n  const inputRef = React.useRef();\n  console.log(user);\n\n  function handleError(error) {\n    console.log(error);\n\n    if (error.message.includes(\"users_username_key\")) {\n      setError({\n        type: \"username\",\n        message: \"This username is already taken.\"\n      });\n    } else if (error.code.includes(\"auth\")) {\n      setError({\n        type: \"email\",\n        message: error.message\n      });\n    }\n  }\n\n  async function onSubmit(data) {\n    try {\n      setError(DEFAULT_ERROR);\n      const variables = { ...data,\n        id: user.id\n      };\n      await updateEmail(data.email);\n      await editUser({\n        variables\n      });\n      setOpen(true);\n    } catch (error) {\n      console.error(\"Error updating profile\", error);\n      handleError(error);\n    }\n  }\n\n  const handleUpdateProfilePic = async event => {\n    await handleImageUpload({\n      user,\n      media: event.target.files[0],\n      stateFunction: setProfileImage,\n      gqlFunction: editUserAvatar,\n      actionType: 'UPLOAD_AVATAR'\n    });\n  };\n\n  const openFileInput = () => {\n    inputRef.current.click();\n  };\n\n  return React.createElement(\"section\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.pictureSectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(ProfilePicture, {\n    size: 45,\n    image: profileImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, user.username), React.createElement(\"input\", {\n    accept: \"image/*\",\n    id: \"image\",\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    ref: inputRef,\n    onChange: handleUpdateProfilePic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: openFileInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"primary\",\n    variant: \"body2\",\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Change Profile Photo\"))))), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(SectionItem, {\n    name: \"name\",\n    inputRef: { ...register(\"name\", {\n        required: true,\n        minLength: 5,\n        maxLength: 20\n      })\n    },\n    text: \"Name\",\n    formItem: user.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), React.createElement(SectionItem, {\n    name: \"username\",\n    error: error,\n    inputRef: { ...register(\"username\", {\n        required: true,\n        pattern: /^[a-zA-Z0-9_.]*$/,\n        minLength: 5,\n        maxLength: 20\n      })\n    },\n    text: \"Username\",\n    formItem: user.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }), React.createElement(SectionItem, {\n    name: \"website\",\n    inputRef: { ...register(\"website\", {\n        validate: input => Boolean(input) ? isURL(input, {\n          protocols: [\"http\", \"https\"],\n          require_protocol: true\n        }) : true\n      })\n    },\n    text: \"Website\",\n    formItem: user.website,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.bio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"Bio\")), React.createElement(TextField, Object.assign({\n    name: \"bio\"\n  }, register(\"bio\", {\n    maxLength: 120\n  }), {\n    variant: \"outlined\",\n    multiline: true,\n    fullWidth: true,\n    rowsMax: 3,\n    rows: 3,\n    defaultValue: user.bio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Personal Information\")), React.createElement(SectionItem, {\n    name: \"email\",\n    error: error,\n    inputRef: { ...register(\"email\", {\n        required: true,\n        validate: input => isEmail(input)\n      })\n    },\n    text: \"Email\",\n    formItem: user.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }), React.createElement(SectionItem, {\n    name: \"phoneNumber\",\n    inputRef: { ...register(\"phoneNumber\", {\n        validate: input => Boolean(input) ? isMobilePhone(input) : true\n      })\n    },\n    text: \"Phone Number\",\n    formItem: user.phone_number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 3000,\n    TransitionComponent: Slide,\n    message: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Profile updated\"),\n    onClose: () => setOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }));\n};\n\nconst SectionItem = ({\n  type = \"text\",\n  text,\n  formItem,\n  inputRef,\n  name,\n  error\n}) => {\n  const classes = useEditProfilePageStyles();\n  return React.createElement(\"div\", {\n    className: classes.sectionItemWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, text)), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    style: {\n      paddingTop: \"1px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, text))), React.createElement(TextField, Object.assign({\n    name: name,\n    variant: \"outlined\",\n    helperText: (error === null || error === void 0 ? void 0 : error.type) === name && error.message\n  }, inputRef, {\n    fullWidth: true,\n    defaultValue: formItem,\n    type: type,\n    className: classes.textField,\n    inputProps: {\n      className: classes.textFieldInput\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  })));\n};\n\nexport default EditProfilePage;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/pages/edit-profile.js"],"names":["React","useEditProfilePageStyles","Layout","IconButton","Hidden","Drawer","List","ListItem","ListItemText","Typography","TextField","Button","Snackbar","Slide","Menu","ProfilePicture","UserContext","useMutation","useQuery","GET_EDIT_USER_PROFILE","LoadingScreen","useForm","isURL","isEmail","isMobilePhone","EDIT_USER","EDIT_USER_AVATAR","AuthContext","handleImageUpload","EditProfilePage","history","currentUserId","useContext","variables","id","data","loading","classes","showDrawer","setDrawer","useState","path","location","pathname","handleToggleDrawer","prev","handleSelected","index","includes","handleListClick","push","options","drawer","map","option","selected","listItemSelected","button","listItemButton","section","menuButton","paperAnchorLeft","temporaryDrawer","permanentDrawerRoot","paper","permanentDrawerPaper","root","users_by_pk","DEFAULT_ERROR","type","message","EditUserInfo","user","updateEmail","register","handleSubmit","mode","editUser","error","setError","open","setOpen","profileImage","setProfileImage","profile_image","editUserAvatar","inputRef","useRef","console","log","handleError","code","onSubmit","email","handleUpdateProfilePic","event","media","target","files","stateFunction","gqlFunction","actionType","openFileInput","current","click","container","pictureSectionItem","justifySelfStart","typography","username","display","form","required","minLength","maxLength","name","pattern","validate","input","Boolean","protocols","require_protocol","website","sectionItem","bio","phone_number","SectionItem","text","formItem","sectionItemWrapper","paddingTop","textField","className","textFieldInput"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEditProfilePageStyles } from \"../styles\";\nimport Layout from \"../components/shared/Layout\";\nimport { IconButton, Hidden, Drawer, List, ListItem, ListItemText, Typography, TextField, Button, Snackbar, Slide } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport ProfilePicture from \"../components/shared/ProfilePicture\";\nimport { UserContext } from \"../App\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { GET_EDIT_USER_PROFILE } from \"../graphql/queries\";\nimport LoadingScreen from \"../components/shared/LoadingScreen\";\nimport { useForm } from 'react-hook-form';\nimport isURL from \"validator/lib/isURL\";\nimport isEmail from \"validator/lib/isEmail\";\nimport isMobilePhone from \"validator/lib/isMobilePhone\";\nimport { EDIT_USER, EDIT_USER_AVATAR } from \"../graphql/mutations\";\nimport { AuthContext } from \"../auth\";\nimport handleImageUpload from \"../utils/handleImageUpload\";\n\nfunction EditProfilePage({ history }) {\n  const { currentUserId } = React.useContext(UserContext);\n  const variables = { id: currentUserId }\n  const { data, loading } = useQuery(GET_EDIT_USER_PROFILE, { variables });\n  const classes = useEditProfilePageStyles();\n  const [showDrawer, setDrawer] = React.useState(false);\n  const path = history.location.pathname;\n\n  const handleToggleDrawer = () => {\n    setDrawer(prev => !prev);\n  }\n\n  const handleSelected = (index) => {\n    switch (index) {\n      case 0: {\n        return path.includes('edit');\n      }\n      default:\n        break;\n    }\n  }\n\n  const handleListClick = (index) => {\n    switch (index) {\n      case 0: {\n        history.push('/accounts/edit');\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  const options = [\n    \"Edit Profile\",\n    \"Change Password\",\n    \"Apps and Websites\",\n    \"Email and SMS\",\n    \"Push Notification\",\n    \"Manage Contacts\",\n    \"Privacy and Security\",\n    \"Login Activity\",\n    \"Emails from Instagram\",\n  ];\n\n  const drawer = (\n    <List>\n      {options.map((option, index) => (\n        <ListItem\n          key={option}\n          button\n          selected={handleSelected(index)}\n          onClick={() => handleListClick(index)}\n          classes={{\n            selected: classes.listItemSelected,\n            button: classes.listItemButton\n          }}\n        >\n          <ListItemText primary={option} />\n        </ListItem>\n      ))}\n    </List>\n  )\n\n  if (loading) return <LoadingScreen />\n  return (\n    <Layout title=\"Edit Profile\">\n      <section className={classes.section}>\n        <IconButton\n          edge=\"start\"\n          onClick={handleToggleDrawer}\n          className={classes.menuButton}\n        >\n          <Menu />\n        </IconButton>\n        <nav>\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              variant=\"temporary\"\n              anchor=\"left\"\n              open={showDrawer}\n              onClose={handleToggleDrawer}\n              classes={{ paperAnchorLeft: classes.temporaryDrawer }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden\n            xsDown\n            implementation=\"css\"\n            className={classes.permanentDrawerRoot}\n          >\n            <Drawer\n              variant=\"permanent\"\n              open\n              classes={{\n                paper: classes.permanentDrawerPaper,\n                root: classes.permanentDrawerRoot\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main>\n          {path.includes('edit') && <EditUserInfo user={data.users_by_pk} />}\n        </main>\n\n\n      </section>\n    </Layout>\n  )\n}\n\nconst DEFAULT_ERROR = { type: \"\", message: \"\" }\n\n\nconst EditUserInfo = ({ user }) => {\n  const { updateEmail } = React.useContext(AuthContext);\n  const { register, handleSubmit } = useForm({ mode: 'onBlur' });\n  const classes = useEditProfilePageStyles();\n  const [editUser] = useMutation(EDIT_USER);\n  const [error, setError] = React.useState(DEFAULT_ERROR);\n  const [open, setOpen] = React.useState(false);\n  // const [media, setMedia] = React.useState(null);\n  const [profileImage, setProfileImage] = React.useState(user.profile_image);\n  const [editUserAvatar] = useMutation(EDIT_USER_AVATAR)\n  const inputRef = React.useRef();\n  console.log(user);\n\n  function handleError(error) {\n    console.log(error);\n    if (error.message.includes(\"users_username_key\")) {\n      setError({\n        type: \"username\",\n        message: \"This username is already taken.\",\n      });\n    } else if (error.code.includes(\"auth\")) {\n      setError({ type: \"email\", message: error.message });\n    }\n  }\n\n  async function onSubmit(data) {\n    try {\n      setError(DEFAULT_ERROR);\n      const variables = { ...data, id: user.id };\n      await updateEmail(data.email);\n      await editUser({ variables });\n      setOpen(true);\n    } catch (error) {\n      console.error(\"Error updating profile\", error);\n      handleError(error);\n    }\n  }\n\n  const handleUpdateProfilePic = async (event) => {\n    await handleImageUpload({\n      user,\n      media: event.target.files[0],\n      stateFunction: setProfileImage,\n      gqlFunction: editUserAvatar,\n      actionType: 'UPLOAD_AVATAR'\n    });\n  }\n\n  const openFileInput = () => {\n    inputRef.current.click();\n  }\n\n  return (\n    <section className={classes.container}>\n      <div className={classes.pictureSectionItem}>\n        <ProfilePicture size={45} image={profileImage} />\n        <div className={classes.justifySelfStart}>\n          <Typography className={classes.typography}>\n            {user.username}\n          </Typography>\n          <input\n            accept=\"image/*\"\n            id=\"image\"\n            type=\"file\"\n            style={{ display: \"none\" }}\n            ref={inputRef}\n            onChange={handleUpdateProfilePic}\n          />\n          <label htmlFor=\"image\">\n            <Button onClick={openFileInput}>\n              <Typography\n                color=\"primary\"\n                variant=\"body2\"\n                className={classes.typography}\n              >\n                Change Profile Photo\n              </Typography>\n            </Button>\n          </label>\n        </div>\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n        <SectionItem name=\"name\" inputRef={{\n          ...register(\"name\", {\n            required: true,\n            minLength: 5,\n            maxLength: 20,\n          })\n        }} text=\"Name\" formItem={user.name} />\n        <SectionItem\n          name=\"username\"\n          error={error}\n          inputRef={{\n            ...register(\"username\", {\n              required: true,\n              pattern: /^[a-zA-Z0-9_.]*$/,\n              minLength: 5,\n              maxLength: 20,\n            })\n          }} text=\"Username\" formItem={user.username} />\n        <SectionItem name=\"website\" inputRef={{\n          ...register(\"website\", {\n            validate: (input) =>\n              Boolean(input)\n                ? isURL(input, {\n                  protocols: [\"http\", \"https\"],\n                  require_protocol: true,\n                })\n                : true,\n          })\n        }} text=\"Website\" formItem={user.website} />\n        <div className={classes.sectionItem} >\n          <aside>\n            <Typography className={classes.bio}>Bio</Typography>\n          </aside>\n          <TextField\n            name=\"bio\" {\n            ...register(\"bio\", {\n              maxLength: 120,\n            })\n            }\n            variant=\"outlined\"\n            multiline\n            fullWidth\n            rowsMax={3}\n            rows={3}\n            defaultValue={user.bio}\n          />\n        </div>\n        <div className={classes.sectionItem}>\n          <div />\n          <Typography color=\"textSecondary\" className={classes.justifySelfStart}>\n            Personal Information\n          </Typography>\n        </div>\n        <SectionItem\n          name=\"email\"\n          error={error}\n          inputRef={{\n            ...register(\"email\", {\n              required: true,\n              validate: (input) => isEmail(input)\n            })\n          }} text=\"Email\" formItem={user.email} />\n        <SectionItem name=\"phoneNumber\" inputRef={{\n          ...register(\"phoneNumber\", {\n            validate: input => Boolean(input) ? isMobilePhone(input) : true,\n          })\n        }} text=\"Phone Number\" formItem={user.phone_number} />\n        <div className={classes.sectionItem}>\n          <div />\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            className={classes.justifySelfStart}\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n      <Snackbar\n        open={open}\n        autoHideDuration={3000}\n        TransitionComponent={Slide}\n        message={<span>Profile updated</span>}\n        onClose={() => setOpen(false)}\n      />\n    </section>\n  )\n}\n\nconst SectionItem = ({ type = \"text\", text, formItem, inputRef, name, error }) => {\n  const classes = useEditProfilePageStyles();\n\n  return (\n    <div className={classes.sectionItemWrapper}>\n      <aside>\n        <Hidden xsDown>\n          <Typography className={classes.typography} align=\"right\">\n            {text}\n          </Typography>\n        </Hidden>\n        <Hidden smUp>\n          <Typography className={classes.typography} style={{ paddingTop: \"1px\" }}>\n            {text}\n          </Typography>\n        </Hidden>\n      </aside>\n      <TextField\n        name={name}\n        variant=\"outlined\"\n        helperText={error?.type === name && error.message}\n        {...inputRef}\n        fullWidth\n        defaultValue={formItem}\n        type={type}\n        className={classes.textField}\n        inputProps={{\n          className: classes.textFieldInput,\n        }}\n      />\n    </div>\n  )\n}\n\n\nexport default EditProfilePage;\n"]},"metadata":{},"sourceType":"module"}