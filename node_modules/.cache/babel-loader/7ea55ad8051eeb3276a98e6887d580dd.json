{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/explore/ExploreGrid.js\";\nimport { useQuery } from \"@apollo/client\";\nimport { Typography } from \"@material-ui/core\";\nimport { LocalConvenienceStoreOutlined } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { UserContext } from \"../../App\";\nimport { EXPLORE_POSTS } from \"../../graphql/queries\";\nimport { LoadingLargeIcon } from \"../../icons\";\nimport { useExploreGridStyles } from \"../../styles\";\nimport GridPost from \"../shared/GridPost\";\n\nfunction ExploreGrid() {\n  const classes = useExploreGridStyles(); // const [loading, setLoading] = React.useState(true);\n\n  const {\n    feedIds\n  } = React.useContext(UserContext);\n  const variables = {\n    feedIds\n  };\n  console.log({\n    variables\n  });\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(EXPLORE_POSTS, {\n    variables\n  }); // const {  } = explorePosts()\n\n  console.log('data', data);\n  console.log('loading', loading);\n  React.useEffect(() => {// const timeOut = setTimeout(() => setLoading(false), 1000);\n    // return () => clearTimeout(timeOut);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"subtitle2\",\n    component: \"h2\",\n    gutterBottom: true,\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Explore\"), loading ? React.createElement(LoadingLargeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(\"article\", {\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, data.posts.map(post => React.createElement(GridPost, {\n    key: post.id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })))));\n}\n\nexport default ExploreGrid;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/explore/ExploreGrid.js"],"names":["useQuery","Typography","LocalConvenienceStoreOutlined","React","UserContext","EXPLORE_POSTS","LoadingLargeIcon","useExploreGridStyles","GridPost","ExploreGrid","classes","feedIds","useContext","variables","console","log","data","loading","error","useEffect","typography","article","postContainer","posts","map","post","id"],"mappings":";AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,6BAAT,QAA8C,oBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAGA,SAASC,WAAT,GAAuB;AACrB,QAAMC,OAAO,GAAGH,oBAAoB,EAApC,CADqB,CAErB;;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAcR,KAAK,CAACS,UAAN,CAAiBR,WAAjB,CAApB;AACA,QAAMS,SAAS,GAAG;AAAEF,IAAAA;AAAF,GAAlB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BlB,QAAQ,CAACK,aAAD,EAAgB;AAAEQ,IAAAA;AAAF,GAAhB,CAAzC,CANqB,CAOrB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,IAApB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,OAAvB;AACAd,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM,CACpB;AACA;AACD,GAHD,EAGG,EAHH;AAKA,SACE,0CACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,SAAS,EAAC,IAHZ;AAIE,IAAA,YAAY,MAJd;AAKE,IAAA,SAAS,EAAET,OAAO,CAACU,UALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAUGH,OAAO,GACN,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN;AAAS,IAAA,SAAS,EAAEP,OAAO,CAACW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACY,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACO,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAClB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CAbJ,CADF;AAwBD;;AAED,eAAehB,WAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport { Typography } from \"@material-ui/core\";\nimport { LocalConvenienceStoreOutlined } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { UserContext } from \"../../App\";\nimport { EXPLORE_POSTS } from \"../../graphql/queries\";\nimport { LoadingLargeIcon } from \"../../icons\";\nimport { useExploreGridStyles } from \"../../styles\";\nimport GridPost from \"../shared/GridPost\"\n\n\nfunction ExploreGrid() {\n  const classes = useExploreGridStyles();\n  // const [loading, setLoading] = React.useState(true);\n  const { feedIds } = React.useContext(UserContext);\n  const variables = { feedIds }\n  console.log({ variables });\n  const { data, loading, error } = useQuery(EXPLORE_POSTS, { variables });\n  // const {  } = explorePosts()\n  console.log('data', data);\n  console.log('loading', loading);\n  React.useEffect(() => {\n    // const timeOut = setTimeout(() => setLoading(false), 1000);\n    // return () => clearTimeout(timeOut);\n  }, [])\n\n  return (\n    <>\n      <Typography\n        color=\"textSecondary\"\n        variant=\"subtitle2\"\n        component=\"h2\"\n        gutterBottom\n        className={classes.typography}\n      >\n        Explore\n      </Typography>\n      {loading ? (\n        <LoadingLargeIcon />\n      ) : (\n        <article className={classes.article}>\n          <div className={classes.postContainer}>\n            {data.posts.map(post => (\n              <GridPost key={post.id} post={post} />\n            ))}\n          </div>\n        </article>\n      )}\n    </>\n  )\n}\n\nexport default ExploreGrid;\n"]},"metadata":{},"sourceType":"module"}