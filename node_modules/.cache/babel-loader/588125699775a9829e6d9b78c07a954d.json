{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/shared/FollowSuggestions.js\";\nimport { Avatar, Typography, useMediaQuery } from \"@material-ui/core\";\nimport React from \"react\";\nimport { LoadingLargeIcon } from \"../../icons\";\nimport { useFollowSuggestionsStyles } from \"../../styles\";\nimport Slider from \"react-slick\";\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { Link } from \"react-router-dom\";\nimport FollowButton from \"./FollowButton\";\nimport { UserContext } from \"../../App\";\nimport { SUGGEST_USERS } from \"../../graphql/queries\";\nimport { useQuery } from \"@apollo/client\";\n\nfunction FollowSuggestions({\n  hideHeader,\n  noBackground\n}) {\n  const classes = useFollowSuggestionsStyles();\n  const {\n    me,\n    followerIds\n  } = React.useContext(UserContext);\n  const variables = {\n    limit: 20,\n    followerIds,\n    createdAt: me.created_at\n  };\n  const {\n    data,\n    loading\n  } = useQuery(SUGGEST_USERS, {\n    variables\n  });\n  if (data) console.log('length', data.users.length);\n  return React.createElement(\"div\", {\n    className: !noBackground ? classes.wrapper : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, !hideHeader && React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"subtitle2\",\n    className: classes.typographySuggestion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Suggestions For You\"), loading ? React.createElement(LoadingLargeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : React.createElement(Slider, {\n    className: classes.slide,\n    dots: false,\n    infinite: false,\n    speed: 1000,\n    touchThreshold: 1000,\n    variableWidth: true,\n    swipeToslide: true,\n    arrows: true,\n    slidesToScroll: 2,\n    easing: \"ease-in-out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, data.users.map(user => React.createElement(FollowSuggestionsItem, {\n    key: user.id,\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))));\n}\n\nexport const FollowSuggestionsItem = ({\n  user\n}) => {\n  const classes = useFollowSuggestionsStyles();\n  const {\n    profile_image,\n    username,\n    name,\n    id\n  } = user;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/${username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: profile_image,\n    alt: `${username}'s profile`,\n    classes: {\n      root: classes.avatar,\n      img: classes.avatarImg\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: `/${username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    className: classes.text,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, username)), React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body2\",\n    className: classes.text,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, name), React.createElement(FollowButton, {\n    id: id,\n    side: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })));\n};\nexport default FollowSuggestions;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/shared/FollowSuggestions.js"],"names":["Avatar","Typography","useMediaQuery","React","LoadingLargeIcon","useFollowSuggestionsStyles","Slider","Link","FollowButton","UserContext","SUGGEST_USERS","useQuery","FollowSuggestions","hideHeader","noBackground","classes","me","followerIds","useContext","variables","limit","createdAt","created_at","data","loading","console","log","users","length","wrapper","undefined","container","typographySuggestion","slide","map","user","id","FollowSuggestionsItem","profile_image","username","name","card","root","avatar","img","avatarImg","text"],"mappings":"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","sourcesContent":["import { Avatar, Typography, useMediaQuery } from \"@material-ui/core\";\nimport React from \"react\";\nimport { LoadingLargeIcon } from \"../../icons\";\nimport { useFollowSuggestionsStyles } from \"../../styles\";\nimport Slider from \"react-slick\";\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { Link } from \"react-router-dom\";\nimport FollowButton from \"./FollowButton\";\nimport { UserContext } from \"../../App\";\nimport { SUGGEST_USERS } from \"../../graphql/queries\";\nimport { useQuery } from \"@apollo/client\";\n\nfunction FollowSuggestions({ hideHeader, noBackground }) {\n  const classes = useFollowSuggestionsStyles();\n  const { me, followerIds } = React.useContext(UserContext);\n  const variables = { limit: 20, followerIds, createdAt: me.created_at };\n  const { data, loading } = useQuery(SUGGEST_USERS, { variables });\n\n  if (data) console.log('length', data.users.length);\n\n  return (\n    <div className={!noBackground ? classes.wrapper : undefined}>\n      <div className={classes.container}>\n        {!hideHeader && <Typography\n          color=\"textSecondary\"\n          variant=\"subtitle2\"\n          className={classes.typographySuggestion}\n        >\n          Suggestions For You\n        </Typography>}\n        {loading ? (\n          <LoadingLargeIcon />\n        ) : (\n          <Slider\n            className={classes.slide}\n            dots={false}\n            infinite={false}\n            speed={1000}\n            touchThreshold={1000}\n            variableWidth\n            swipeToslide\n            arrows\n            slidesToScroll={2}\n            easing=\"ease-in-out\"\n          >\n            {data.users.map(user => (\n              <FollowSuggestionsItem key={user.id} user={user} />\n            ))}\n          </Slider>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport const FollowSuggestionsItem = ({ user }) => {\n  const classes = useFollowSuggestionsStyles();\n  const { profile_image, username, name, id } = user;\n\n  return (\n    <div>\n      <div className={classes.card}>\n        <Link to={`/${username}`}>\n          <Avatar\n            src={profile_image}\n            alt={`${username}'s profile`}\n            classes={{\n              root: classes.avatar,\n              img: classes.avatarImg\n            }}\n          />\n        </Link>\n        <Link to={`/${username}`}>\n          <Typography\n            variant=\"subtitle2\"\n            className={classes.text}\n            align=\"center\"\n          >\n            {username}\n          </Typography>\n        </Link >\n        <Typography color=\"textSecondary\" variant=\"body2\" className={classes.text}\n          align=\"center\"\n        >\n          {name}\n        </Typography>\n        <FollowButton id={id} side={false} />\n      </div>\n    </div>\n  )\n\n}\nexport default FollowSuggestions;\n"]},"metadata":{},"sourceType":"module"}