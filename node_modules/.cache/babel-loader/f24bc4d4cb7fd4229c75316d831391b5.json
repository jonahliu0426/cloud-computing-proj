{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/profile/ProfileTabs.js\";\nimport React from \"react\";\nimport { useProfileTabsStyles } from \"../../styles\";\nimport { Hidden, Tabs, Divider, Tab, Typography } from \"@material-ui/core\";\nimport { GridIcon, SaveIcon } from \"../../icons\";\nimport GridPost from \"../shared/GridPost\";\n\nfunction ProfileTabs({\n  user,\n  isOwner\n}) {\n  const classes = useProfileTabsStyles();\n  const [value, setValue] = React.useState(0);\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    onChange: (_, value) => setValue(value),\n    centered: true,\n    classes: {\n      indicator: classes.tabsIndicator\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    icon: React.createElement(\"span\", {\n      className: classes.postsIconLarge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }),\n    label: \"POSTS\",\n    classes: {\n      root: classes.root,\n      labelIcon: classes.tabLabelIcon,\n      wrapper: classes.tabWrapper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    icon: React.createElement(\"span\", {\n      className: classes.NFTIconLarge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }),\n    label: \"NFT\",\n    classes: {\n      root: classes.root,\n      labelIcon: classes.tabLabelIcon,\n      wrapper: classes.tabWrapper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), isOwner && React.createElement(Tab, {\n    icon: React.createElement(\"span\", {\n      className: classes.savedIconLarge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    label: \"Saved\",\n    classes: {\n      root: classes.root,\n      labelIcon: classes.tabLabelIcon,\n      wrapper: classes.tabWrapper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    onChange: (_, value) => setValue(value),\n    centered: true,\n    className: classes.tabs,\n    classes: {\n      indicator: classes.tabsIndicator\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    icon: React.createElement(GridIcon, {\n      fill: value === 0 ? \"#3897f0\" : undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }),\n    root: classes.tabRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    icon: React.createElement(\"span\", {\n      className: classes.NFTIconSmall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }),\n    root: classes.tabRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), isOwner && React.createElement(Tab, {\n    icon: React.createElement(SaveIcon, {\n      fill: value === 2 ? \"#3897f0\" : undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }),\n    root: classes.tabRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, user.posts.length === 0 && React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))), value === 0 && React.createElement(ProfilePosts, {\n    user: user,\n    isOwner: isOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), value === 1 && React.createElement(NFTPosts, {\n    user: user,\n    isOwner: isOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), value === 2 && React.createElement(SavedPosts, {\n    user: user,\n    isOwner: isOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n}\n\nconst ProfilePosts = ({\n  user,\n  isOwner\n}) => {\n  const classes = useProfileTabsStyles();\n\n  if (user.posts.length === 0) {\n    return React.createElement(\"section\", {\n      className: classes.profilePostsSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.noContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.uploadPhotoIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, isOwner ? \"Upload a Photo\" : \"No Photo\")));\n  }\n\n  return React.createElement(\"article\", {\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, user.posts.map(post => React.createElement(GridPost, {\n    key: post.id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))));\n};\n\nconst SavedPosts = ({\n  user,\n  isOwner\n}) => {\n  const classes = useProfileTabsStyles();\n\n  if (user.saved_posts.length === 0) {\n    return React.createElement(\"section\", {\n      className: classes.savedPostsSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.noContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.savePhotoIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Typography, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Save photos and videos that you want to see again. No one is notified, and only you can see what you've saved.\")));\n  }\n\n  return React.createElement(\"article\", {\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, user.saved_posts.map(({\n    post\n  }) => React.createElement(GridPost, {\n    key: post.id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))));\n};\n\nconst NFTPosts = ({\n  user,\n  isOwner\n}) => {\n  var _user$nfts, _user$nfts2;\n\n  const classes = useProfileTabsStyles();\n\n  if (((_user$nfts = user.nfts) === null || _user$nfts === void 0 ? void 0 : _user$nfts.length) === 0) {\n    return React.createElement(\"section\", {\n      className: classes.profilePostsSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.noContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.nftCollectionIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), isOwner ? React.createElement(React.Fragment, null, React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"NFT Collection\"), React.createElement(Typography, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Discover, collect, and sell extraordinary NFTs\")) : React.createElement(React.Fragment, null, React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"NFT Collection\"), React.createElement(Typography, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"No NFTs\"))));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: classes.profilePostsSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.noContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nftCollectionIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"NFT Collection\"), React.createElement(Typography, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Discover, collect, and sell extraordinary NFTs\"))), React.createElement(\"article\", {\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, (_user$nfts2 = user.nfts) === null || _user$nfts2 === void 0 ? void 0 : _user$nfts2.map(nft => React.createElement(GridNFT, {\n    key: nft.id,\n    nft: nft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })))));\n};\n\nconst GridNFT = () => {\n  return React.createElement(React.Fragment, null, \"NFT Post\");\n};\n\nexport default ProfileTabs;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/profile/ProfileTabs.js"],"names":["React","useProfileTabsStyles","Hidden","Tabs","Divider","Tab","Typography","GridIcon","SaveIcon","GridPost","ProfileTabs","user","isOwner","classes","value","setValue","useState","section","_","indicator","tabsIndicator","postsIconLarge","root","labelIcon","tabLabelIcon","wrapper","tabWrapper","NFTIconLarge","savedIconLarge","tabs","undefined","tabRoot","NFTIconSmall","posts","length","ProfilePosts","profilePostsSection","noContent","uploadPhotoIcon","article","postContainer","map","post","id","SavedPosts","saved_posts","savedPostsSection","savePhotoIcon","NFTPosts","nfts","nftCollectionIcon","nft","GridNFT"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useProfileTabsStyles } from \"../../styles\";\nimport { Hidden, Tabs, Divider, Tab, Typography } from \"@material-ui/core\";\nimport { GridIcon, SaveIcon } from \"../../icons\";\nimport GridPost from \"../shared/GridPost\";\n\n\nfunction ProfileTabs({ user, isOwner }) {\n  const classes = useProfileTabsStyles();\n  const [value, setValue] = React.useState(0)\n\n  return (\n    <>\n      <section className={classes.section}>\n        <Hidden xsDown>\n          <Divider />\n        </Hidden>\n        <Hidden xsDown>\n          <Tabs\n            value={value}\n            onChange={(_, value) => setValue(value)}\n            centered\n            classes={{ indicator: classes.tabsIndicator }}\n          >\n            <Tab\n              icon={<span className={classes.postsIconLarge} />}\n              label=\"POSTS\"\n              classes={{\n                root: classes.root,\n                labelIcon: classes.tabLabelIcon,\n                wrapper: classes.tabWrapper\n              }}\n            />\n            <Tab\n              icon={<span className={classes.NFTIconLarge} />}\n              label=\"NFT\"\n              classes={{\n                root: classes.root,\n                labelIcon: classes.tabLabelIcon,\n                wrapper: classes.tabWrapper\n              }}\n            />\n            {isOwner && (\n              <Tab\n                icon={<span className={classes.savedIconLarge} />}\n                label=\"Saved\"\n                classes={{\n                  root: classes.root,\n                  labelIcon: classes.tabLabelIcon,\n                  wrapper: classes.tabWrapper\n                }}\n              />\n            )}\n          </Tabs>\n        </Hidden>\n        <Hidden smUp>\n          <Tabs\n            value={value}\n            onChange={(_, value) => setValue(value)}\n            centered\n            className={classes.tabs}\n            classes={{ indicator: classes.tabsIndicator }}\n          >\n            <Tab\n              icon={<GridIcon fill={value === 0 ? \"#3897f0\" : undefined} />}\n              root={classes.tabRoot}\n            />\n            <Tab\n              icon={<span className={classes.NFTIconSmall} />}\n              root={classes.tabRoot}\n            />\n            {isOwner && (\n              <Tab\n                icon={<SaveIcon fill={value === 2 ? \"#3897f0\" : undefined} />}\n                root={classes.tabRoot}\n              />\n            )}\n          </Tabs>\n        </Hidden>\n        <Hidden smUp>{user.posts.length === 0 && <Divider />}</Hidden>\n      </section>\n      {value === 0 && <ProfilePosts user={user} isOwner={isOwner} />}\n      {value === 1 && <NFTPosts user={user} isOwner={isOwner} />}\n      {value === 2 && <SavedPosts user={user} isOwner={isOwner} />}\n    </>\n  )\n}\n\nconst ProfilePosts = ({ user, isOwner }) => {\n  const classes = useProfileTabsStyles();\n\n  if (user.posts.length === 0) {\n    return (\n      <section className={classes.profilePostsSection}>\n        <div className={classes.noContent}>\n          <div className={classes.uploadPhotoIcon} />\n          <Typography variant=\"h4\">\n            {isOwner ? \"Upload a Photo\" : \"No Photo\"}\n          </Typography>\n        </div>\n      </section>\n    )\n  }\n\n  return (\n    <article className={classes.article}>\n      <div className={classes.postContainer}>\n        {user.posts.map(post => (\n          <GridPost key={post.id} post={post} />\n        ))}\n      </div>\n    </article>\n  )\n}\n\nconst SavedPosts = ({ user, isOwner }) => {\n  const classes = useProfileTabsStyles();\n\n  if (user.saved_posts.length === 0) {\n    return (\n      <section className={classes.savedPostsSection}>\n        <div className={classes.noContent}>\n          <div className={classes.savePhotoIcon} />\n          <Typography variant=\"h4\">\n            Save\n          </Typography>\n          <Typography align=\"center\">\n            Save photos and videos that you want to see again. No one is notified, and only you can see what you've saved.\n          </Typography>\n        </div>\n      </section>\n    )\n  }\n\n  return (\n    <article className={classes.article}>\n      <div className={classes.postContainer}>\n        {user.saved_posts.map(({ post }) => (\n          <GridPost key={post.id} post={post} />\n        ))}\n      </div>\n    </article>\n  );\n}\n\nconst NFTPosts = ({ user, isOwner }) => {\n  const classes = useProfileTabsStyles();\n\n  if (user.nfts?.length === 0) {\n    return (\n      <section className={classes.profilePostsSection}>\n        <div className={classes.noContent}>\n          <div className={classes.nftCollectionIcon} />\n          {isOwner ? (\n            <>\n              <Typography variant=\"h4\">\n                NFT Collection\n              </Typography>\n              <Typography align=\"center\">\n                Discover, collect, and sell extraordinary NFTs\n              </Typography>\n            </>\n          ) : (\n            <>\n              <Typography variant=\"h4\">\n                NFT Collection\n              </Typography>\n              <Typography align=\"center\">\n                No NFTs\n              </Typography>\n            </>\n\n          )}\n        </div>\n      </section>\n    )\n  }\n\n  return (\n    <>\n      <section className={classes.profilePostsSection}>\n        <div className={classes.noContent}>\n          <div className={classes.nftCollectionIcon} />\n          <Typography variant=\"h4\">\n            NFT Collection\n          </Typography>\n          <Typography align=\"center\">\n            Discover, collect, and sell extraordinary NFTs\n          </Typography>\n        </div>\n      </section>\n      <article className={classes.article}>\n        <div className={classes.postContainer}>\n          {user.nfts?.map(nft => (\n            <GridNFT key={nft.id} nft={nft} />\n          ))}\n        </div>\n      </article>\n    </>\n  )\n}\n\nconst GridNFT = () => {\n  return <>NFT Post</>\n}\nexport default ProfileTabs;\n"]},"metadata":{},"sourceType":"module"}