{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/notification/NotificationList.js\";\nimport React from \"react\";\nimport { useNotificationListStyles } from \"../../styles\";\nimport { Avatar, Grid, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport FollowButton from \"../shared/FollowButton\";\nimport useOutsideClick from \"@rooks/use-outside-click\";\nimport { useMutation } from \"@apollo/client\";\nimport { CHECK_NOTIFICATIONS } from \"../../graphql/mutations\";\nimport { formatDateToNowShort } from \"../../utils/formatDate\";\n\nfunction NotificationList({\n  currentUserId,\n  handleHideList,\n  notifications\n}) {\n  console.log('notifications', notifications);\n  const classes = useNotificationListStyles();\n  const listContainerRef = React.useRef();\n  useOutsideClick(listContainerRef, handleHideList);\n  const [checkNotifications] = useMutation(CHECK_NOTIFICATIONS);\n  React.useEffect(() => {\n    const variables = {\n      userId: currentUserId,\n      lastChecked: new Date().toISOString()\n    };\n    checkNotifications({\n      variables\n    });\n  }, [currentUserId, checkNotifications]);\n  return React.createElement(Grid, {\n    ref: listContainerRef,\n    className: classes.listContainer,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, notifications.map(notification => {\n    var _notification$post, _notification$post2;\n\n    const isLike = notification.type === 'like';\n    const isFollow = notification.type === 'follow';\n    return React.createElement(Grid, {\n      key: notification.id,\n      item: true,\n      className: classes.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.listItemWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.avatarWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      src: notification.user.profile_image,\n      alt: \"user avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.nameWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/${notification.user.username}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, notification.user.username)), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      className: classes.typography,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, isLike && `liked your photo. ${formatDateToNowShort(notification.created_at)}`, isFollow && `started following you. ${formatDateToNowShort(notification.created_at)}`))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, isLike && React.createElement(Link, {\n      to: `/p/${(_notification$post = notification.post) === null || _notification$post === void 0 ? void 0 : _notification$post.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      src: (_notification$post2 = notification.post) === null || _notification$post2 === void 0 ? void 0 : _notification$post2.media,\n      alt: \"post cover\",\n      variant: \"square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), isFollow && React.createElement(FollowButton, {\n      id: notification.user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }));\n}\n\nexport default NotificationList;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/notification/NotificationList.js"],"names":["React","useNotificationListStyles","Avatar","Grid","Typography","Link","FollowButton","useOutsideClick","useMutation","CHECK_NOTIFICATIONS","formatDateToNowShort","NotificationList","currentUserId","handleHideList","notifications","console","log","classes","listContainerRef","useRef","checkNotifications","useEffect","variables","userId","lastChecked","Date","toISOString","listContainer","map","notification","isLike","type","isFollow","id","listItem","listItemWrapper","avatarWrapper","user","profile_image","nameWrapper","username","typography","created_at","post","media"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,yBAAT,QAA0C,cAA1C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,QAAyC,mBAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,oBAAT,QAAqC,wBAArC;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,cAAjB;AAAiCC,EAAAA;AAAjC,CAA1B,EAA4E;AAC1EC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,aAA7B;AACA,QAAMG,OAAO,GAAGhB,yBAAyB,EAAzC;AACA,QAAMiB,gBAAgB,GAAGlB,KAAK,CAACmB,MAAN,EAAzB;AACAZ,EAAAA,eAAe,CAACW,gBAAD,EAAmBL,cAAnB,CAAf;AACA,QAAM,CAACO,kBAAD,IAAuBZ,WAAW,CAACC,mBAAD,CAAxC;AAEAT,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpB,UAAMC,SAAS,GAAG;AAChBC,MAAAA,MAAM,EAAEX,aADQ;AAEhBY,MAAAA,WAAW,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAFG,KAAlB;AAIAN,IAAAA,kBAAkB,CAAC;AAAEE,MAAAA;AAAF,KAAD,CAAlB;AACD,GAND,EAMG,CAACV,aAAD,EAAgBQ,kBAAhB,CANH;AASA,SACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEF,gBAAX;AAA6B,IAAA,SAAS,EAAED,OAAO,CAACU,aAAhD;AAA+D,IAAA,SAAS,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,aAAa,CAACc,GAAd,CAAkBC,YAAY,IAAI;AAAA;;AACjC,UAAMC,MAAM,GAAGD,YAAY,CAACE,IAAb,KAAsB,MAArC;AACA,UAAMC,QAAQ,GAAGH,YAAY,CAACE,IAAb,KAAsB,QAAvC;AAEA,WACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEF,YAAY,CAACI,EAAxB;AAA4B,MAAA,IAAI,MAAhC;AAAiC,MAAA,SAAS,EAAEhB,OAAO,CAACiB,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEjB,OAAO,CAACkB,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACmB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEP,YAAY,CAACQ,IAAb,CAAkBC,aAA/B;AAA8C,MAAA,GAAG,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAErB,OAAO,CAACsB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,IAAGV,YAAY,CAACQ,IAAb,CAAkBG,QAAS,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,YAAY,CAACQ,IAAb,CAAkBG,QADrB,CADF,CADF,EAME,oBAAC,UAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,SAAS,EAAEvB,OAAO,CAACwB,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGX,MAAM,IAAK,qBAAoBpB,oBAAoB,CAACmB,YAAY,CAACa,UAAd,CAA0B,EALhF,EAMGV,QAAQ,IAAK,0BAAyBtB,oBAAoB,CAACmB,YAAY,CAACa,UAAd,CAA0B,EANvF,CANF,CAJF,CADF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,MAAM,IACL,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,MAAD,sBAAMD,YAAY,CAACc,IAAnB,uDAAM,mBAAmBV,EAAG,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,GAAG,yBAAEJ,YAAY,CAACc,IAAf,wDAAE,oBAAmBC,KAAhC;AAAuC,MAAA,GAAG,EAAC,YAA3C;AAAwD,MAAA,OAAO,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,EAMGZ,QAAQ,IAAI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEH,YAAY,CAACQ,IAAb,CAAkBJ,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANf,CArBF,CADF;AAgCD,GApCA,CADH,CADF;AA0CD;;AAED,eAAetB,gBAAf","sourcesContent":["import React from \"react\";\nimport { useNotificationListStyles } from \"../../styles\";\nimport { Avatar, Grid, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport FollowButton from \"../shared/FollowButton\";\nimport useOutsideClick from \"@rooks/use-outside-click\";\nimport { useMutation } from \"@apollo/client\";\nimport { CHECK_NOTIFICATIONS } from \"../../graphql/mutations\";\nimport { formatDateToNowShort } from \"../../utils/formatDate\";\n\nfunction NotificationList({ currentUserId, handleHideList, notifications }) {\n  console.log('notifications', notifications);\n  const classes = useNotificationListStyles();\n  const listContainerRef = React.useRef();\n  useOutsideClick(listContainerRef, handleHideList);\n  const [checkNotifications] = useMutation(CHECK_NOTIFICATIONS);\n\n  React.useEffect(() => {\n    const variables = {\n      userId: currentUserId,\n      lastChecked: new Date().toISOString()\n    }\n    checkNotifications({ variables });\n  }, [currentUserId, checkNotifications]);\n\n\n  return (\n    <Grid ref={listContainerRef} className={classes.listContainer} container>\n      {notifications.map(notification => {\n        const isLike = notification.type === 'like';\n        const isFollow = notification.type === 'follow';\n\n        return (\n          <Grid key={notification.id} item className={classes.listItem}>\n            <div className={classes.listItemWrapper}>\n              <div className={classes.avatarWrapper}>\n                <Avatar src={notification.user.profile_image} alt=\"user avatar\" />\n              </div>\n              <div className={classes.nameWrapper}>\n                <Link to={`/${notification.user.username}`}>\n                  <Typography variant=\"body1\">\n                    {notification.user.username}\n                  </Typography>\n                </Link>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  className={classes.typography}\n                >\n                  {isLike && `liked your photo. ${formatDateToNowShort(notification.created_at)}`}\n                  {isFollow && `started following you. ${formatDateToNowShort(notification.created_at)}`}\n                </Typography>\n              </div>\n            </div>\n            <div>\n              {isLike && (\n                <Link to={`/p/${notification.post?.id}`}>\n                  <Avatar src={notification.post?.media} alt=\"post cover\" variant=\"square\" />\n                </Link>\n              )}\n              {isFollow && <FollowButton id={notification.user.id} />}\n            </div>\n          </Grid>\n        )\n      })}\n\n    </Grid>\n  )\n}\n\nexport default NotificationList;\n"]},"metadata":{},"sourceType":"module"}