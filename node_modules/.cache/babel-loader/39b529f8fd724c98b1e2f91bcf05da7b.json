{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/shared/Navbar.js\";\nimport { AppBar, Avatar, Fade, Grid, Hidden, InputBase, Typography, Zoom } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useNavbarStyles, WhiteTooltip, RedTooltip } from \"../../styles\";\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../../images/customized-logo.png';\nimport { AddIcon, ExploreActiveIcon, ExploreIcon, HomeActiveIcon, HomeIcon, LikeActiveIcon, LikeIcon, LoadingIcon } from \"../../icons\";\nimport NotificationTooltip from '../notification/NotificationTooltip';\nimport NotificationList from \"../notification/NotificationList\";\nimport { useNProgress } from \"@tanem/react-nprogress\";\nimport { AuthContext } from \"../../auth\";\nimport { SEARCH_USERS } from \"../../graphql/queries\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { UserContext } from \"../../App\";\nimport AddPostDialog from \"../post/AddPostDialog\";\nimport { isAfter } from \"date-fns\";\nimport { create } from \"domain\";\nimport { useMutation } from \"@apollo/client\";\nimport { CHECK_NOTIFICATIONS } from \"../../graphql/mutations\";\n\nfunction Navbar({\n  minimalNavbar\n}) {\n  const classes = useNavbarStyles();\n  const history = useHistory();\n  const path = history.location.pathname;\n  const [isLoadingPage, setLoadingPage] = React.useState(true);\n  React.useEffect(() => {\n    setLoadingPage(false);\n  }, [path]);\n  return React.createElement(React.Fragment, null, React.createElement(Progress, {\n    isAnimating: isLoadingPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), !minimalNavbar && React.createElement(React.Fragment, null, React.createElement(Search, {\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Links, {\n    path: path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))));\n}\n\nconst Logo = () => {\n  const classes = useNavbarStyles();\n  return React.createElement(\"div\", {\n    className: classes.logoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logoWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"Instagram logo\",\n    className: classes.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n};\n\nconst Search = ({\n  history\n}) => {\n  const classes = useNavbarStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [results, setResults] = React.useState([]);\n  const [query, setQuery] = React.useState('');\n  const [searchUsers, {\n    data\n  }] = useLazyQuery(SEARCH_USERS);\n  const hasResults = Boolean(query) && results.length > 0;\n  React.useEffect(() => {\n    if (!query.trim()) return;\n    setLoading(true);\n    const variables = {\n      query: `%${query}%`\n    };\n    searchUsers({\n      variables\n    });\n\n    if (data) {\n      setResults(data.users);\n      setLoading(false);\n    }\n  }, [query, data, searchUsers]);\n\n  const handleClearInput = () => {\n    setQuery('');\n  };\n\n  return React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(WhiteTooltip, {\n    arrow: true,\n    interactive: true,\n    TransitionComponent: Fade,\n    open: hasResults,\n    title: hasResults && React.createElement(Grid, {\n      className: classes.resultContainer,\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, results.map(result => React.createElement(Grid, {\n      key: result.id,\n      item: true,\n      className: classes.resultLink,\n      onClick: () => {\n        history.push(`/${result.username}`);\n        handleClearInput();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.resultWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.avatarWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      src: result.profile_image,\n      alt: \"user avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.nameWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, result.username), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, result.name)))))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(InputBase, {\n    className: classes.input,\n    onChange: event => setQuery(event.target.value),\n    startAdornment: React.createElement(\"span\", {\n      className: classes.searchIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }),\n    endAdornment: loading ? React.createElement(LoadingIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      onClick: handleClearInput,\n      className: classes.clearIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }),\n    value: query,\n    placeholder: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })));\n};\n\nconst Links = ({\n  path\n}) => {\n  const {\n    me,\n    currentUserId\n  } = React.useContext(UserContext);\n  const lastChecked = me.last_checked;\n  const newNotifications = me.notifications.filter(({\n    created_at\n  }) => isAfter(new Date(created_at), new Date(lastChecked))); // \n\n  const notificationsToShow = me.notifications.filter(({\n    created_at\n  }) => isAfter(new Date(created_at), new Date(lastChecked).setTime(new Date(lastChecked).getTime() - 24 * 60 * 60 * 1000))); // console.log(new Date(me.last_checked).setTime(new Date(me.last_checked).getTime() - (10 * 60 * 60 * 1000)))\n  // console.log('new notifications', notificationsToShow);\n\n  const hasNotifications = newNotifications.length > 0;\n  const classes = useNavbarStyles();\n  const [showList, setShowList] = React.useState(false);\n  const [showTooltip, setShowTooltip] = React.useState(hasNotifications);\n  const [media, setMedia] = React.useState(null);\n  const [showAddPostDialog, setShowAddPostDialog] = React.useState(false);\n  const inputRef = React.useRef();\n  console.log(me);\n\n  const handleToggleList = () => {\n    setShowList(prev => !prev);\n  };\n\n  React.useEffect(() => {\n    const timeout = setTimeout(handleHideTooltip, 5000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  const handleHideTooltip = () => {\n    setShowTooltip(false);\n  };\n\n  function handleHideList() {\n    setShowList(false);\n  }\n\n  function openFileInput() {\n    inputRef.current.click();\n  }\n\n  function handleAddPost(event) {\n    setMedia(event.target.files[0]);\n    setShowAddPostDialog(true);\n  }\n\n  function handleClose() {\n    setShowAddPostDialog(false);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.linksContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, showList && React.createElement(NotificationList, {\n    currentUserId: currentUserId,\n    notifications: notificationsToShow,\n    handleHideList: handleHideList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.linksWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, showAddPostDialog && React.createElement(AddPostDialog, {\n    media: media,\n    handleClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    ref: inputRef,\n    onChange: handleAddPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(AddIcon, {\n    onClick: openFileInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, path === '/' ? React.createElement(HomeActiveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }) : React.createElement(HomeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/explore\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, path === '/explore' ? React.createElement(ExploreActiveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }) : React.createElement(ExploreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  })), React.createElement(RedTooltip, {\n    arrow: true,\n    open: showTooltip,\n    onOpen: handleHideTooltip,\n    TransitionComponent: Zoom,\n    title: React.createElement(NotificationTooltip, {\n      notifications: newNotifications,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: hasNotifications ? classes.notifications : \"\",\n    onClick: handleToggleList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, showList ? React.createElement(LikeActiveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }) : React.createElement(LikeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }))), React.createElement(Link, {\n    to: `/${me.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: path === `/${me.username}` ? classes.profileActive : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(Avatar, {\n    src: me.profile_image,\n    className: classes.profileImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }))));\n};\n\nconst Progress = ({\n  isAnimating\n}) => {\n  const classes = useNavbarStyles();\n  const {\n    animationDuration,\n    isFinished,\n    progress\n  } = useNProgress({\n    isAnimating\n  });\n  return React.createElement(\"div\", {\n    className: classes.progressContainer,\n    style: {\n      opacity: isFinished ? 0 : 1,\n      transition: `opacity ${animationDuration}ms linear`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.progressBar,\n    style: {\n      marginLeft: `${(-1 + progress) * 100}%`,\n      transition: `margin-left ${animationDuration}ms linear`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.progressBackground,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  })));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/shared/Navbar.js"],"names":["AppBar","Avatar","Fade","Grid","Hidden","InputBase","Typography","Zoom","React","useNavbarStyles","WhiteTooltip","RedTooltip","Link","useHistory","logo","AddIcon","ExploreActiveIcon","ExploreIcon","HomeActiveIcon","HomeIcon","LikeActiveIcon","LikeIcon","LoadingIcon","NotificationTooltip","NotificationList","useNProgress","AuthContext","SEARCH_USERS","useLazyQuery","UserContext","AddPostDialog","isAfter","create","useMutation","CHECK_NOTIFICATIONS","Navbar","minimalNavbar","classes","history","path","location","pathname","isLoadingPage","setLoadingPage","useState","useEffect","appBar","section","Logo","logoContainer","logoWrapper","Search","loading","setLoading","results","setResults","query","setQuery","searchUsers","data","hasResults","Boolean","length","trim","variables","users","handleClearInput","resultContainer","map","result","id","resultLink","push","username","resultWrapper","avatarWrapper","profile_image","nameWrapper","name","input","event","target","value","searchIcon","clearIcon","Links","me","currentUserId","useContext","lastChecked","last_checked","newNotifications","notifications","filter","created_at","Date","notificationsToShow","setTime","getTime","hasNotifications","showList","setShowList","showTooltip","setShowTooltip","media","setMedia","showAddPostDialog","setShowAddPostDialog","inputRef","useRef","console","log","handleToggleList","prev","timeout","setTimeout","handleHideTooltip","clearTimeout","handleHideList","openFileInput","current","click","handleAddPost","files","handleClose","linksContainer","linksWrapper","display","profileActive","profileImage","Progress","isAnimating","animationDuration","isFinished","progress","progressContainer","opacity","transition","progressBar","marginLeft","progressBackground"],"mappings":"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","sourcesContent":["import { AppBar, Avatar, Fade, Grid, Hidden, InputBase, Typography, Zoom } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useNavbarStyles, WhiteTooltip, RedTooltip } from \"../../styles\";\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../../images/customized-logo.png'\nimport { AddIcon, ExploreActiveIcon, ExploreIcon, HomeActiveIcon, HomeIcon, LikeActiveIcon, LikeIcon, LoadingIcon } from \"../../icons\";\nimport NotificationTooltip from '../notification/NotificationTooltip';\nimport NotificationList from \"../notification/NotificationList\";\nimport { useNProgress } from \"@tanem/react-nprogress\";\nimport { AuthContext } from \"../../auth\";\nimport { SEARCH_USERS } from \"../../graphql/queries\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { UserContext } from \"../../App\";\nimport AddPostDialog from \"../post/AddPostDialog\";\nimport { isAfter } from \"date-fns\";\nimport { create } from \"domain\";\nimport { useMutation } from \"@apollo/client\";\nimport { CHECK_NOTIFICATIONS } from \"../../graphql/mutations\";\n\n\nfunction Navbar({ minimalNavbar }) {\n  const classes = useNavbarStyles();\n  const history = useHistory();\n  const path = history.location.pathname;\n  const [isLoadingPage, setLoadingPage] = React.useState(true);\n\n  React.useEffect(() => {\n    setLoadingPage(false);\n  }, [path])\n\n  return (\n    <>\n      <Progress isAnimating={isLoadingPage} />\n      <AppBar className={classes.appBar}>\n        <section className={classes.section}>\n          <Logo />\n          {!minimalNavbar && (\n            <>\n              <Search history={history} />\n              <Links path={path} />\n            </>\n          )}\n        </section>\n      </AppBar>\n    </>\n  )\n}\n\nconst Logo = () => {\n  const classes = useNavbarStyles();\n\n  return (\n    <div className={classes.logoContainer}>\n      <Link to=\"/\">\n        <div className={classes.logoWrapper}>\n          <img src={logo} alt=\"Instagram logo\" className={classes.logo} />\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nconst Search = ({ history }) => {\n  const classes = useNavbarStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [results, setResults] = React.useState([])\n  const [query, setQuery] = React.useState('');\n  const [searchUsers, { data }] = useLazyQuery(SEARCH_USERS)\n\n  const hasResults = Boolean(query) && results.length > 0;\n\n  React.useEffect(() => {\n    if (!query.trim()) return;\n    setLoading(true);\n    const variables = { query: `%${query}%` };\n    searchUsers({ variables });\n    if (data) {\n      setResults(data.users);\n      setLoading(false);\n    }\n  }, [query, data, searchUsers]);\n\n  const handleClearInput = () => {\n    setQuery('');\n  }\n\n  return (\n    <Hidden xsDown>\n      <WhiteTooltip\n        arrow\n        interactive\n        TransitionComponent={Fade}\n        open={hasResults}\n        title={\n          hasResults && (\n            <Grid className={classes.resultContainer} container>\n              {results.map(result => (\n                <Grid key={result.id} item className={classes.resultLink}\n                  onClick={() => {\n                    history.push(`/${result.username}`);\n                    handleClearInput();\n                  }}\n                >\n                  <div className={classes.resultWrapper}>\n                    <div className={classes.avatarWrapper}>\n                      <Avatar src={result.profile_image} alt=\"user avatar\" />\n                    </div>\n                    <div className={classes.nameWrapper}>\n                      <Typography variant=\"body1\">{result.username}</Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">{result.name}</Typography>\n                    </div>\n                  </div>\n                </Grid>\n              ))}\n            </Grid>\n          )\n        }\n      >\n        <InputBase\n          className={classes.input}\n          onChange={event => setQuery(event.target.value)}\n          startAdornment={<span className={classes.searchIcon} />}\n          endAdornment={\n            loading ? (\n              <LoadingIcon />\n            ) : (\n              <span onClick={handleClearInput} className={classes.clearIcon} />\n            )\n          }\n          value={query}\n          placeholder=\"Search\"\n        >\n        </InputBase>\n      </WhiteTooltip>\n    </Hidden>\n  )\n}\n\nconst Links = ({ path }) => {\n  const { me, currentUserId } = React.useContext(UserContext);\n  const lastChecked = me.last_checked;\n  const newNotifications = me.notifications.filter(({ created_at }) =>\n    isAfter(new Date(created_at), new Date(lastChecked))\n  );\n  // \n  const notificationsToShow = me.notifications.filter(({ created_at }) =>\n    isAfter(new Date(created_at), new Date(lastChecked).setTime(new Date(lastChecked).getTime() - (24 * 60 * 60 * 1000)))\n  );\n  // console.log(new Date(me.last_checked).setTime(new Date(me.last_checked).getTime() - (10 * 60 * 60 * 1000)))\n  // console.log('new notifications', notificationsToShow);\n  const hasNotifications = newNotifications.length > 0;\n  const classes = useNavbarStyles();\n  const [showList, setShowList] = React.useState(false);\n  const [showTooltip, setShowTooltip] = React.useState(hasNotifications);\n  const [media, setMedia] = React.useState(null);\n  const [showAddPostDialog, setShowAddPostDialog] = React.useState(false);\n  const inputRef = React.useRef();\n  console.log(me);\n\n  const handleToggleList = () => {\n    setShowList((prev) => !prev);\n  }\n\n  React.useEffect(() => {\n    const timeout = setTimeout(handleHideTooltip, 5000);\n    return () => {\n      clearTimeout(timeout);\n    }\n  }, []);\n\n  const handleHideTooltip = () => {\n    setShowTooltip(false);\n  }\n\n  function handleHideList() {\n    setShowList(false);\n  }\n\n  function openFileInput() {\n    inputRef.current.click();\n  }\n\n  function handleAddPost(event) {\n    setMedia(event.target.files[0]);\n    setShowAddPostDialog(true);\n  }\n\n  function handleClose() {\n    setShowAddPostDialog(false);\n  }\n\n  return (\n    <div className={classes.linksContainer}>\n      {showList && <NotificationList currentUserId={currentUserId} notifications={notificationsToShow} handleHideList={handleHideList} />}\n      <div className={classes.linksWrapper}>\n        {showAddPostDialog && (\n          <AddPostDialog media={media} handleClose={handleClose} />\n        )}\n        <Hidden xsDown>\n          <input\n            type=\"file\"\n            style={{ display: \"none\" }}\n            ref={inputRef}\n            onChange={handleAddPost}\n          />\n          <AddIcon onClick={openFileInput} />\n        </Hidden>\n        <Link to=\"/\">\n          {path === '/' ? <HomeActiveIcon /> : <HomeIcon />}\n        </Link>\n        <Link to=\"/explore\">\n          {path === '/explore' ? <ExploreActiveIcon /> : <ExploreIcon />}\n        </Link>\n        <RedTooltip\n          arrow\n          open={showTooltip}\n          onOpen={handleHideTooltip}\n          TransitionComponent={Zoom}\n          title={<NotificationTooltip notifications={newNotifications} />}\n        >\n          <div className={hasNotifications ? classes.notifications : \"\"} onClick={handleToggleList}>\n            {showList ? <LikeActiveIcon /> : <LikeIcon />}\n          </div>\n        </RedTooltip>\n        <Link to={`/${me.username}`}>\n          <div className={path === `/${me.username}` ?\n            classes.profileActive : \"\"}>\n          </div>\n          <Avatar\n            src={me.profile_image}\n            className={classes.profileImage}\n          />\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nconst Progress = ({ isAnimating }) => {\n  const classes = useNavbarStyles();\n  const { animationDuration, isFinished, progress } = useNProgress({\n    isAnimating\n  })\n\n  return (\n    <div className={classes.progressContainer}\n      style={{\n        opacity: isFinished ? 0 : 1,\n        transition: `opacity ${animationDuration}ms linear`\n      }}\n    >\n      <div\n        className={classes.progressBar}\n        style={{\n          marginLeft: `${(-1 + progress) * 100}%`,\n          transition: `margin-left ${animationDuration}ms linear`\n        }}\n      >\n        <div className={classes.progressBackground} />\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}