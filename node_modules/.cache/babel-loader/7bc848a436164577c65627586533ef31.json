{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/post/Post.js\";\nimport { Avatar, Button, Divider, Hidden, TextField, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { usePostStyles } from \"../../styles\";\nimport UserCard from \"../shared/UserCard\";\nimport { MoreIcon, CommentIcon, ShareIcon, UnlikeIcon, LikeIcon, SaveIcon, RemoveIcon } from \"../../icons\";\nimport OptionDialog from \"../shared/OptionsDialog\"; // import { defaultPost } from \"../../data\";\n\nimport PostSkeleton from \"./PostSkeleton\";\nimport { useMutation, useSubscription } from \"@apollo/client\";\nimport { GET_POST } from \"../../graphql/subscriptions\";\nimport { UserContext } from \"../../App\";\nimport { CREATE_COMMENT, LIKE_POST, SAVE_POST, UNLIKE_POST, UNSAVE_POST } from \"../../graphql/mutations\";\nimport { formatDateToNowShort, formatPostDate } from \"../../utils/formatDate\";\n\nfunction Post({\n  postId\n}) {\n  const classes = usePostStyles(); // const [loading, setLoading] = React.useState(true);\n  // const { id, media, likes, user, caption, comments } = defaultPost;\n\n  const [showOptionDialog, setShowOptionDialog] = React.useState(false);\n  const variables = {\n    postId\n  };\n  const {\n    data,\n    loading\n  } = useSubscription(GET_POST, {\n    variables\n  }); // setTimeout(() => setLoading(false), 2000);\n\n  if (loading) return React.createElement(PostSkeleton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n\n  if (data) {\n    const {\n      id,\n      media,\n      likes,\n      likes_aggregate,\n      saved_posts,\n      user_id,\n      user,\n      caption,\n      comments,\n      created_at,\n      location\n    } = data.posts_by_pk;\n    const likesCount = likes_aggregate.aggregate.count;\n    return React.createElement(\"div\", {\n      className: classes.postContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: classes.article,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.postHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(UserCard, {\n      user: user,\n      location: location,\n      avatarSize: 32,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(MoreIcon, {\n      className: classes.MoreIcon,\n      onClick: () => setShowOptionDialog(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.postImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: media,\n      alt: \"Post media\",\n      className: classes.image,\n      style: {\n        \"width\": 500,\n        \"height\": 500,\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.postButtonsWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.postButtons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(LikeButton, {\n      likes: likes,\n      postId: id,\n      authorId: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: `/p/${id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(CommentIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(ShareIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(SaveButton, {\n      savedPosts: saved_posts,\n      postId: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      className: classes.likes,\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, likes === 1 ? \"1 like\" : `${likesCount} likes`)), React.createElement(\"div\", {\n      style: {\n        overflowY: 'scroll',\n        padding: '16px 12px',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(AuthorCaption, {\n      user: user,\n      createdAt: created_at,\n      caption: caption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), comments.map(comment => React.createElement(UserComment, {\n      key: comment.id,\n      comment: comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), React.createElement(Typography, {\n      color: \"textSecondary\",\n      className: classes.datePosted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, formatPostDate(created_at)), React.createElement(Hidden, {\n      xsDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Comment, {\n      postId: postId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))))), showOptionDialog && React.createElement(OptionDialog, {\n      postId: id,\n      authorId: user.id,\n      onClose: () => setShowOptionDialog(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(PostSkeleton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  });\n}\n\nconst LikeButton = ({\n  likes,\n  postId,\n  authorId\n}) => {\n  const classes = usePostStyles();\n  const {\n    currentUserId\n  } = React.useContext(UserContext);\n  const isAlreadyLiked = likes.some(({\n    user_id\n  }) => user_id === currentUserId);\n  const [liked, setLiked] = React.useState(isAlreadyLiked);\n  const Icon = liked ? UnlikeIcon : LikeIcon;\n  const className = liked ? classes.liked : classes.like;\n  const [likePost] = useMutation(LIKE_POST);\n  const [unlikePost] = useMutation(UNLIKE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId,\n    profileId: authorId\n  };\n\n  const handleLike = () => {\n    setLiked(true);\n    likePost({\n      variables\n    });\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    unlikePost({\n      variables\n    });\n  };\n\n  const onClick = liked ? handleUnlike : handleLike;\n  return React.createElement(Icon, {\n    className: className,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  });\n};\n\nconst SaveButton = ({\n  savedPosts,\n  postId\n}) => {\n  const classes = usePostStyles();\n  const {\n    currentUserId\n  } = React.useContext(UserContext);\n  const isAlreadySaved = savedPosts.some(({\n    user_id\n  }) => user_id === currentUserId);\n  const [saved, setSaved] = React.useState(isAlreadySaved);\n  const [savePost] = useMutation(SAVE_POST);\n  const [unsavePost] = useMutation(UNSAVE_POST);\n  const Icon = saved ? RemoveIcon : SaveIcon;\n  const variables = {\n    userId: currentUserId,\n    postId\n  };\n\n  const handleSave = () => {\n    setSaved(true);\n    savePost({\n      variables\n    });\n  };\n\n  const handleRemove = () => {\n    setSaved(false);\n    unsavePost({\n      variables\n    });\n  };\n\n  const onClick = saved ? handleRemove : handleSave;\n  return React.createElement(Icon, {\n    className: classes.saveIcon,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  });\n};\n\nconst Comment = ({\n  postId\n}) => {\n  const classes = usePostStyles();\n  const [content, setContent] = React.useState('');\n  const [createComment] = useMutation(CREATE_COMMENT);\n  const {\n    currentUserId\n  } = React.useContext(UserContext);\n\n  function handleAddComment() {\n    const variables = {\n      content,\n      postId,\n      userId: currentUserId\n    };\n    createComment({\n      variables\n    });\n    setContent('');\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.commentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    value: content,\n    placeholder: \"Add a comment\",\n    multiline: true,\n    rowsMax: 2,\n    rows: 1,\n    className: classes.textField,\n    onChange: event => setContent(event.target.value),\n    InputProps: {\n      classes: {\n        root: classes.root,\n        underline: classes.underline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    className: classes.commentButton,\n    disabled: !content.trim(),\n    onClick: handleAddComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Post\"));\n};\n\nfunction AuthorCaption({\n  user,\n  caption,\n  createdAt\n}) {\n  const classes = usePostStyles();\n  return React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: user.profile_image,\n    alt: \"User avatar\",\n    style: {\n      marginRight: 14,\n      width: 32,\n      height: 32\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/${user.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"span\",\n    className: classes.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, user.username), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    className: classes.postCaption,\n    style: {\n      paddingLeft: 0\n    },\n    dangerouslySetInnerHTML: {\n      __html: caption\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    style: {\n      marginTop: 16,\n      marginBottom: 4,\n      display: 'inline-block'\n    },\n    color: \"textSecondary\",\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, formatDateToNowShort(createdAt))));\n}\n\nfunction UserComment({\n  comment\n}) {\n  const classes = usePostStyles();\n  return React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: comment.user.profile_image,\n    alt: \"User avatar\",\n    style: {\n      marginRight: 14,\n      width: 32,\n      height: 32\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/${comment.user.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"span\",\n    className: classes.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, comment.user.username), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    className: classes.postCaption,\n    style: {\n      paddingLeft: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, comment.content)), React.createElement(Typography, {\n    style: {\n      marginTop: 16,\n      marginBottom: 4,\n      display: 'inline-block'\n    },\n    color: \"textSecondary\",\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, formatDateToNowShort(comment.created_at))));\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/components/post/Post.js"],"names":["Avatar","Button","Divider","Hidden","TextField","Typography","React","Link","usePostStyles","UserCard","MoreIcon","CommentIcon","ShareIcon","UnlikeIcon","LikeIcon","SaveIcon","RemoveIcon","OptionDialog","PostSkeleton","useMutation","useSubscription","GET_POST","UserContext","CREATE_COMMENT","LIKE_POST","SAVE_POST","UNLIKE_POST","UNSAVE_POST","formatDateToNowShort","formatPostDate","Post","postId","classes","showOptionDialog","setShowOptionDialog","useState","variables","data","loading","id","media","likes","likes_aggregate","saved_posts","user_id","user","caption","comments","created_at","location","posts_by_pk","likesCount","aggregate","count","postContainer","article","postHeader","postImage","image","margin","postButtonsWrapper","postButtons","overflowY","padding","height","map","comment","datePosted","LikeButton","authorId","currentUserId","useContext","isAlreadyLiked","some","liked","setLiked","Icon","className","like","likePost","unlikePost","userId","profileId","handleLike","handleUnlike","onClick","SaveButton","savedPosts","isAlreadySaved","saved","setSaved","savePost","unsavePost","handleSave","handleRemove","saveIcon","Comment","content","setContent","createComment","handleAddComment","commentContainer","textField","event","target","value","root","underline","commentButton","trim","AuthorCaption","createdAt","display","profile_image","marginRight","width","flexDirection","username","postCaption","paddingLeft","__html","marginTop","marginBottom","UserComment"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,SAA1C,EAAqDC,UAArD,QAAuE,mBAAvE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,QAAjE,EAA2EC,UAA3E,QAA6F,aAA7F;AACA,OAAOC,YAAP,MAAyB,yBAAzB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,gBAA7C;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,SAApC,EAA+CC,WAA/C,EAA4DC,WAA5D,QAA+E,yBAA/E;AACA,SAASC,oBAAT,EAA+BC,cAA/B,QAAqD,wBAArD;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA0B;AACxB,QAAMC,OAAO,GAAGxB,aAAa,EAA7B,CADwB,CAExB;AACA;;AACA,QAAM,CAACyB,gBAAD,EAAmBC,mBAAnB,IAA0C5B,KAAK,CAAC6B,QAAN,CAAe,KAAf,CAAhD;AACA,QAAMC,SAAS,GAAG;AAAEL,IAAAA;AAAF,GAAlB;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBlB,eAAe,CAACC,QAAD,EAAW;AAAEe,IAAAA;AAAF,GAAX,CAAzC,CANwB,CASxB;;AAEA,MAAIE,OAAJ,EAAa,OAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AAEb,MAAID,IAAJ,EAAU;AACR,UAAM;AAAEE,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA,eAApB;AAAqCC,MAAAA,WAArC;AAAkDC,MAAAA,OAAlD;AAA2DC,MAAAA,IAA3D;AAAiEC,MAAAA,OAAjE;AAA0EC,MAAAA,QAA1E;AAAoFC,MAAAA,UAApF;AAAgGC,MAAAA;AAAhG,QAA6GZ,IAAI,CAACa,WAAxH;AACA,UAAMC,UAAU,GAAGT,eAAe,CAACU,SAAhB,CAA0BC,KAA7C;AACA,WACE;AAAK,MAAA,SAAS,EAAErB,OAAO,CAACsB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAS,MAAA,SAAS,EAAEtB,OAAO,CAACuB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAEvB,OAAO,CAACwB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEX,IAAhB;AAAsB,MAAA,QAAQ,EAAEI,QAAhC;AAA0C,MAAA,UAAU,EAAE,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AACE,MAAA,SAAS,EAAEjB,OAAO,CAACtB,QADrB;AAEE,MAAA,OAAO,EAAE,MAAMwB,mBAAmB,CAAC,IAAD,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAUE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACyB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEjB,KAAV;AAAiB,MAAA,GAAG,EAAC,YAArB;AAAkC,MAAA,SAAS,EAAER,OAAO,CAAC0B,KAArD;AAA4D,MAAA,KAAK,EAAE;AAAE,iBAAS,GAAX;AAAgB,kBAAU,GAA1B;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,EAcE;AAAK,MAAA,SAAS,EAAE3B,OAAO,CAAC4B,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEpB,KAAnB;AAA0B,MAAA,MAAM,EAAEF,EAAlC;AAAsC,MAAA,QAAQ,EAAEM,IAAI,CAACN,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,MAAKA,EAAG,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAEI,WAAxB;AAAqC,MAAA,MAAM,EAAEJ,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,EAUE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEP,OAAO,CAACS,KAA/B;AAAsC,MAAA,OAAO,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAK,KAAK,CAAV,GAAc,QAAd,GAA0B,GAAEU,UAAW,QAA9C,CADF,CAVF,EAcE;AAAK,MAAA,KAAK,EAAE;AACVW,QAAAA,SAAS,EAAE,QADD;AAEVC,QAAAA,OAAO,EAAE,WAFC;AAGVC,QAAAA,MAAM,EAAE;AAHE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEnB,IAArB;AAA2B,MAAA,SAAS,EAAEG,UAAtC;AAAkD,MAAA,OAAO,EAAEF,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMGC,QAAQ,CAACkB,GAAT,CAAaC,OAAO,IACnB,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAAC3B,EAA1B;AAA8B,MAAA,OAAO,EAAE2B,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CANH,CAdF,EA2BE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,eAAlB;AAAkC,MAAA,SAAS,EAAElC,OAAO,CAACmC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtC,cAAc,CAACmB,UAAD,CADjB,CA3BF,EA8BE,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACkC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAEnC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CA9BF,CAdF,CADF,EAsDGE,gBAAgB,IAAI,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAEM,EAAtB;AAA0B,MAAA,QAAQ,EAAEM,IAAI,CAACN,EAAzC;AAA6C,MAAA,OAAO,EAAE,MAAML,mBAAmB,CAAC,KAAD,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtDvB,CADF;AA0DD;;AACD,SAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,MAAMkC,UAAU,GAAG,CAAC;AAAE3B,EAAAA,KAAF;AAASV,EAAAA,MAAT;AAAiBsC,EAAAA;AAAjB,CAAD,KAAiC;AAClD,QAAMrC,OAAO,GAAGxB,aAAa,EAA7B;AACA,QAAM;AAAE8D,IAAAA;AAAF,MAAoBhE,KAAK,CAACiE,UAAN,CAAiBjD,WAAjB,CAA1B;AACA,QAAMkD,cAAc,GAAG/B,KAAK,CAACgC,IAAN,CAAW,CAAC;AAAE7B,IAAAA;AAAF,GAAD,KAAiBA,OAAO,KAAK0B,aAAxC,CAAvB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBrE,KAAK,CAAC6B,QAAN,CAAeqC,cAAf,CAA1B;AACA,QAAMI,IAAI,GAAGF,KAAK,GAAG7D,UAAH,GAAgBC,QAAlC;AACA,QAAM+D,SAAS,GAAGH,KAAK,GAAG1C,OAAO,CAAC0C,KAAX,GAAmB1C,OAAO,CAAC8C,IAAlD;AACA,QAAM,CAACC,QAAD,IAAa5D,WAAW,CAACK,SAAD,CAA9B;AACA,QAAM,CAACwD,UAAD,IAAe7D,WAAW,CAACO,WAAD,CAAhC;AACA,QAAMU,SAAS,GAAG;AAChBL,IAAAA,MADgB;AAEhBkD,IAAAA,MAAM,EAAEX,aAFQ;AAGhBY,IAAAA,SAAS,EAAEb;AAHK,GAAlB;;AAMA,QAAMc,UAAU,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,QAAQ,CAAC;AAAE3C,MAAAA;AAAF,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMgD,YAAY,GAAG,MAAM;AACzBT,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAK,IAAAA,UAAU,CAAC;AAAE5C,MAAAA;AAAF,KAAD,CAAV;AACD,GAHD;;AAKA,QAAMiD,OAAO,GAAGX,KAAK,GAAGU,YAAH,GAAkBD,UAAvC;AAEA,SAAO,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEN,SAAjB;AAA4B,IAAA,OAAO,EAAEQ,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA5BD;;AA8BA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcxD,EAAAA;AAAd,CAAD,KAA4B;AAC7C,QAAMC,OAAO,GAAGxB,aAAa,EAA7B;AACA,QAAM;AAAE8D,IAAAA;AAAF,MAAoBhE,KAAK,CAACiE,UAAN,CAAiBjD,WAAjB,CAA1B;AACA,QAAMkE,cAAc,GAAGD,UAAU,CAACd,IAAX,CAAgB,CAAC;AAAE7B,IAAAA;AAAF,GAAD,KAAiBA,OAAO,KAAK0B,aAA7C,CAAvB;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpF,KAAK,CAAC6B,QAAN,CAAeqD,cAAf,CAA1B;AACA,QAAM,CAACG,QAAD,IAAaxE,WAAW,CAACM,SAAD,CAA9B;AACA,QAAM,CAACmE,UAAD,IAAezE,WAAW,CAACQ,WAAD,CAAhC;AACA,QAAMiD,IAAI,GAAGa,KAAK,GAAGzE,UAAH,GAAgBD,QAAlC;AAEA,QAAMqB,SAAS,GAAG;AAChB6C,IAAAA,MAAM,EAAEX,aADQ;AAEhBvC,IAAAA;AAFgB,GAAlB;;AAKA,QAAM8D,UAAU,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAAEvD,MAAAA;AAAF,KAAD,CAAR;AACD,GAHD;;AAKA,QAAM0D,YAAY,GAAG,MAAM;AACzBJ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,IAAAA,UAAU,CAAC;AAAExD,MAAAA;AAAF,KAAD,CAAV;AACD,GAHD;;AAKA,QAAMiD,OAAO,GAAGI,KAAK,GAAGK,YAAH,GAAkBD,UAAvC;AAEA,SAAO,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE7D,OAAO,CAAC+D,QAAzB;AAAmC,IAAA,OAAO,EAAEV,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA3BD;;AA6BA,MAAMW,OAAO,GAAG,CAAC;AAAEjE,EAAAA;AAAF,CAAD,KAAgB;AAC9B,QAAMC,OAAO,GAAGxB,aAAa,EAA7B;AACA,QAAM,CAACyF,OAAD,EAAUC,UAAV,IAAwB5F,KAAK,CAAC6B,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACgE,aAAD,IAAkBhF,WAAW,CAACI,cAAD,CAAnC;AACA,QAAM;AAAE+C,IAAAA;AAAF,MAAoBhE,KAAK,CAACiE,UAAN,CAAiBjD,WAAjB,CAA1B;;AAEA,WAAS8E,gBAAT,GAA4B;AAC1B,UAAMhE,SAAS,GAAG;AAChB6D,MAAAA,OADgB;AAEhBlE,MAAAA,MAFgB;AAGhBkD,MAAAA,MAAM,EAAEX;AAHQ,KAAlB;AAKA6B,IAAAA,aAAa,CAAC;AAAE/D,MAAAA;AAAF,KAAD,CAAb;AACA8D,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAElE,OAAO,CAACqE,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAEJ,OAFT;AAGE,IAAA,WAAW,EAAC,eAHd;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,OAAO,EAAE,CALX;AAME,IAAA,IAAI,EAAE,CANR;AAOE,IAAA,SAAS,EAAEjE,OAAO,CAACsE,SAPrB;AAQE,IAAA,QAAQ,EAAEC,KAAK,IAAIL,UAAU,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAR/B;AASE,IAAA,UAAU,EAAE;AACVzE,MAAAA,OAAO,EAAE;AACP0E,QAAAA,IAAI,EAAE1E,OAAO,CAAC0E,IADP;AAEPC,QAAAA,SAAS,EAAE3E,OAAO,CAAC2E;AAFZ;AADC,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAiBE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,SAAS,EAAE3E,OAAO,CAAC4E,aAFrB;AAGE,IAAA,QAAQ,EAAE,CAACX,OAAO,CAACY,IAAR,EAHb;AAIE,IAAA,OAAO,EAAET,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,CADF;AA2BD,CA3CD;;AA6CA,SAASU,aAAT,CAAuB;AAAEjE,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBiE,EAAAA;AAAjB,CAAvB,EAAqD;AACnD,QAAM/E,OAAO,GAAGxB,aAAa,EAA7B;AAEA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEwG,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEnE,IAAI,CAACoE,aADZ;AAEE,IAAA,GAAG,EAAC,aAFN;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,KAAK,EAAE,EAA1B;AAA8BnD,MAAAA,MAAM,EAAE;AAAtC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAK,IAAA,KAAK,EAAE;AAAEgD,MAAAA,OAAO,EAAE,MAAX;AAAmBI,MAAAA,aAAa,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,IAAGvE,IAAI,CAACwE,QAAS,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAiD,IAAA,SAAS,EAAErF,OAAO,CAACqF,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxE,IAAI,CAACwE,QADR,CADF,EAKE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,MAAtC;AAA6C,IAAA,SAAS,EAAErF,OAAO,CAACsF,WAAhE;AAA6E,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAApF;AACE,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAE1E;AAAV,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAWE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE;AAAE2E,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,YAAY,EAAE,CAA/B;AAAkCV,MAAAA,OAAO,EAAE;AAA3C,KADT;AAEE,IAAA,KAAK,EAAC,eAFR;AAGE,IAAA,OAAO,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGpF,oBAAoB,CAACmF,SAAD,CALvB,CAXF,CANF,CADF;AA4BD;;AAED,SAASY,WAAT,CAAqB;AAAEzD,EAAAA;AAAF,CAArB,EAAkC;AAChC,QAAMlC,OAAO,GAAGxB,aAAa,EAA7B;AACA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEwG,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAE9C,OAAO,CAACrB,IAAR,CAAaoE,aADpB;AAEE,IAAA,GAAG,EAAC,aAFN;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,KAAK,EAAE,EAA1B;AAA8BnD,MAAAA,MAAM,EAAE;AAAtC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAK,IAAA,KAAK,EAAE;AAAEgD,MAAAA,OAAO,EAAE,MAAX;AAAmBI,MAAAA,aAAa,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,IAAGlD,OAAO,CAACrB,IAAR,CAAawE,QAAS,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAiD,IAAA,SAAS,EAAErF,OAAO,CAACqF,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnD,OAAO,CAACrB,IAAR,CAAawE,QADhB,CADF,EAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,MAAtC;AAA6C,IAAA,SAAS,EAAErF,OAAO,CAACsF,WAAhE;AAA6E,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGrD,OAAO,CAAC+B,OAFX,CAJF,CADF,EAUE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE;AAAEwB,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,YAAY,EAAE,CAA/B;AAAkCV,MAAAA,OAAO,EAAE;AAA3C,KADT;AAEE,IAAA,KAAK,EAAC,eAFR;AAGE,IAAA,OAAO,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGpF,oBAAoB,CAACsC,OAAO,CAAClB,UAAT,CALvB,CAVF,CANF,CADF;AA2BD;;AAED,eAAelB,IAAf","sourcesContent":["import { Avatar, Button, Divider, Hidden, TextField, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { usePostStyles } from \"../../styles\";\nimport UserCard from \"../shared/UserCard\";\nimport { MoreIcon, CommentIcon, ShareIcon, UnlikeIcon, LikeIcon, SaveIcon, RemoveIcon } from \"../../icons\";\nimport OptionDialog from \"../shared/OptionsDialog\";\n// import { defaultPost } from \"../../data\";\nimport PostSkeleton from \"./PostSkeleton\";\nimport { useMutation, useSubscription } from \"@apollo/client\";\nimport { GET_POST } from \"../../graphql/subscriptions\";\nimport { UserContext } from \"../../App\";\nimport { CREATE_COMMENT, LIKE_POST, SAVE_POST, UNLIKE_POST, UNSAVE_POST } from \"../../graphql/mutations\";\nimport { formatDateToNowShort, formatPostDate } from \"../../utils/formatDate\";\n\nfunction Post({ postId }) {\n  const classes = usePostStyles();\n  // const [loading, setLoading] = React.useState(true);\n  // const { id, media, likes, user, caption, comments } = defaultPost;\n  const [showOptionDialog, setShowOptionDialog] = React.useState(false);\n  const variables = { postId }\n  const { data, loading } = useSubscription(GET_POST, { variables });\n\n\n  // setTimeout(() => setLoading(false), 2000);\n\n  if (loading) return <PostSkeleton />;\n\n  if (data) {\n    const { id, media, likes, likes_aggregate, saved_posts, user_id, user, caption, comments, created_at, location } = data.posts_by_pk;\n    const likesCount = likes_aggregate.aggregate.count;\n    return (\n      <div className={classes.postContainer}>\n        <article className={classes.article}>\n          {/* Post Header */}\n          <div className={classes.postHeader}>\n            <UserCard user={user} location={location} avatarSize={32} />\n            <MoreIcon\n              className={classes.MoreIcon}\n              onClick={() => setShowOptionDialog(true)}\n            />\n          </div>\n          {/* Post Image */}\n          <div className={classes.postImage}>\n            <img src={media} alt=\"Post media\" className={classes.image} style={{ \"width\": 500, \"height\": 500, margin: \"auto\" }} />\n          </div>\n          {/* Post Button */}\n          <div className={classes.postButtonsWrapper}>\n            <div className={classes.postButtons}>\n              <LikeButton likes={likes} postId={id} authorId={user.id} />\n              <Link to={`/p/${id}`}>\n                <CommentIcon />\n              </Link>\n              <ShareIcon />\n              <SaveButton savedPosts={saved_posts} postId={id} />\n            </div>\n            {/* Post Likes Count */}\n            <Typography className={classes.likes} variant=\"subtitle2\">\n              <span>{likes === 1 ? \"1 like\" : `${likesCount} likes`}</span>\n            </Typography>\n            {/* Post Caption */}\n            <div style={{\n              overflowY: 'scroll',\n              padding: '16px 12px',\n              height: '100%'\n            }}>\n              <AuthorCaption user={user} createdAt={created_at} caption={caption} />\n              {comments.map(comment => (\n                <UserComment key={comment.id} comment={comment} />\n              ))}\n            </div>\n\n            {/* Post Comment Area */}\n\n            <Typography color=\"textSecondary\" className={classes.datePosted}>\n              {formatPostDate(created_at)}\n            </Typography>\n            <Hidden xsDown>\n              <div className={classes.comment}>\n                <Divider />\n                <Comment postId={postId} />\n              </div>\n            </Hidden>\n          </div>\n\n        </article>\n        {showOptionDialog && <OptionDialog postId={id} authorId={user.id} onClose={() => setShowOptionDialog(false)} />}\n      </div>\n    )\n  }\n  return <PostSkeleton />;\n}\n\nconst LikeButton = ({ likes, postId, authorId }) => {\n  const classes = usePostStyles();\n  const { currentUserId } = React.useContext(UserContext)\n  const isAlreadyLiked = likes.some(({ user_id }) => user_id === currentUserId);\n  const [liked, setLiked] = React.useState(isAlreadyLiked);\n  const Icon = liked ? UnlikeIcon : LikeIcon;\n  const className = liked ? classes.liked : classes.like;\n  const [likePost] = useMutation(LIKE_POST)\n  const [unlikePost] = useMutation(UNLIKE_POST)\n  const variables = {\n    postId,\n    userId: currentUserId,\n    profileId: authorId,\n  }\n\n  const handleLike = () => {\n    setLiked(true);\n    likePost({ variables })\n  }\n\n  const handleUnlike = () => {\n    setLiked(false);\n    unlikePost({ variables })\n  }\n\n  const onClick = liked ? handleUnlike : handleLike;\n\n  return <Icon className={className} onClick={onClick} />\n}\n\nconst SaveButton = ({ savedPosts, postId }) => {\n  const classes = usePostStyles();\n  const { currentUserId } = React.useContext(UserContext);\n  const isAlreadySaved = savedPosts.some(({ user_id }) => user_id === currentUserId);\n  const [saved, setSaved] = React.useState(isAlreadySaved);\n  const [savePost] = useMutation(SAVE_POST)\n  const [unsavePost] = useMutation(UNSAVE_POST)\n  const Icon = saved ? RemoveIcon : SaveIcon;\n\n  const variables = {\n    userId: currentUserId,\n    postId\n  }\n\n  const handleSave = () => {\n    setSaved(true);\n    savePost({ variables })\n  }\n\n  const handleRemove = () => {\n    setSaved(false);\n    unsavePost({ variables })\n  }\n\n  const onClick = saved ? handleRemove : handleSave;\n\n  return <Icon className={classes.saveIcon} onClick={onClick} />\n}\n\nconst Comment = ({ postId }) => {\n  const classes = usePostStyles();\n  const [content, setContent] = React.useState('');\n  const [createComment] = useMutation(CREATE_COMMENT);\n  const { currentUserId } = React.useContext(UserContext);\n\n  function handleAddComment() {\n    const variables = {\n      content,\n      postId,\n      userId: currentUserId\n    }\n    createComment({ variables })\n    setContent('');\n  }\n\n  return (\n    <div className={classes.commentContainer}>\n      <TextField\n        fullWidth\n        value={content}\n        placeholder=\"Add a comment\"\n        multiline\n        rowsMax={2}\n        rows={1}\n        className={classes.textField}\n        onChange={event => setContent(event.target.value)}\n        InputProps={{\n          classes: {\n            root: classes.root,\n            underline: classes.underline\n          }\n        }}\n      />\n      <Button\n        color=\"primary\"\n        className={classes.commentButton}\n        disabled={!content.trim()}\n        onClick={handleAddComment}\n      >\n        Post\n      </Button>\n    </div>)\n}\n\nfunction AuthorCaption({ user, caption, createdAt }) {\n  const classes = usePostStyles();\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Avatar\n        src={user.profile_image}\n        alt=\"User avatar\"\n        style={{ marginRight: 14, width: 32, height: 32 }}\n      />\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <Link to={`/${user.username}`}>\n          <Typography variant='subtitle2' component=\"span\" className={classes.username}>\n            {user.username}\n\n          </Typography>\n          <Typography variant='body2' component=\"span\" className={classes.postCaption} style={{ paddingLeft: 0 }}\n            dangerouslySetInnerHTML={{ __html: caption }}\n          >\n          </Typography>\n        </Link>\n        <Typography\n          style={{ marginTop: 16, marginBottom: 4, display: 'inline-block' }}\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          {formatDateToNowShort(createdAt)}\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nfunction UserComment({ comment }) {\n  const classes = usePostStyles();\n  return (\n    <div style={{ display: 'flex' }}>\n      <Avatar\n        src={comment.user.profile_image}\n        alt=\"User avatar\"\n        style={{ marginRight: 14, width: 32, height: 32 }}\n      />\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <Link to={`/${comment.user.username}`}>\n          <Typography variant='subtitle2' component=\"span\" className={classes.username}>\n            {comment.user.username}\n          </Typography>\n          <Typography variant='body2' component=\"span\" className={classes.postCaption} style={{ paddingLeft: 0 }}\n          >\n            {comment.content}\n          </Typography>\n        </Link>\n        <Typography\n          style={{ marginTop: 16, marginBottom: 4, display: 'inline-block' }}\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          {formatDateToNowShort(comment.created_at)}\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}