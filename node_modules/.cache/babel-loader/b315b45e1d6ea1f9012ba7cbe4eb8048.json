{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/pages/signup.js\";\nimport { Button, Card, TextField, Typography, InputAdornment, IconButton } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SEO from \"../components/shared/Seo\";\nimport { useSignUpPageStyles } from \"../styles\";\nimport { LoginWithFacebook } from \"./login\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { HighlightOff, CheckCircleOutline } from \"@material-ui/icons\";\nimport { AuthContext } from \"../auth\";\nimport { useHistory } from \"react-router-dom\";\nimport isEmail from \"validator/lib/isEmail\";\nimport { CHECK_IF_USERNAME_TAKEN } from \"../graphql/queries\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\n\nfunction SignUpPage() {\n  var _formState$touched, _formState$touched2, _formState$touched3, _formState$touched4;\n\n  const client = useApolloClient();\n  const classes = useSignUpPageStyles();\n  const {\n    signUpWithEmailAndPassword\n  } = React.useContext(AuthContext);\n  const history = useHistory();\n  const [error, setError] = React.useState('');\n  const {\n    register,\n    handleSubmit,\n    formState,\n    errors\n  } = useForm({\n    mode: \"onBlur\"\n  });\n\n  const onSubmit = async data => {\n    // console.log({ data });\n    try {\n      setError(\"\");\n      await signUpWithEmailAndPassword(data);\n      history.push(\"/\");\n    } catch (error) {\n      console.error(\"Error signing up\", error); // setError(error.message);\n\n      handleError(error);\n    }\n  };\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = event => {\n    event.preventDefault();\n    setShowPassword(!showPassword);\n  };\n\n  const handleError = error => {\n    if (error.message.includes(\"users_username_key\")) {\n      setError(\"Username already taken\");\n    } else if (error.code.includes(\"auth\")) {\n      setError(error.message);\n    }\n  };\n\n  async function validateUsername(username) {\n    const variables = {\n      username\n    };\n    const response = await client.query({\n      query: CHECK_IF_USERNAME_TAKEN,\n      variables\n    });\n    const isUsernameValid = response.data.users.length === 0;\n    return isUsernameValid;\n  }\n\n  const errorIcon = React.createElement(InputAdornment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(HighlightOff, {\n    style: {\n      color: \"red\",\n      height: 30,\n      width: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n  const validIcon = React.createElement(InputAdornment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(CheckCircleOutline, {\n    style: {\n      color: \"#ccc\",\n      height: 30,\n      width: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n  return React.createElement(React.Fragment, null, React.createElement(SEO, {\n    title: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.cardHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.cardHeaderSubHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Sign up to see photos and videos from your friends.\"), React.createElement(LoginWithFacebook, {\n    color: \"secondary\",\n    iconColor: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.orContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.orLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"OR\")), React.createElement(\"div\", {\n    className: classes.orLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({}, register('email', {\n    'required': true,\n    validate: input => isEmail(input)\n  }), {\n    name: \"email\",\n    InputProps: {\n      endAdornment: errors && (errors === null || errors === void 0 ? void 0 : errors.email) ? errorIcon : ((_formState$touched = formState.touched) === null || _formState$touched === void 0 ? void 0 : _formState$touched.email) && validIcon\n    },\n    fullWidth: true,\n    variant: \"filled\",\n    label: \"Email\",\n    type: \"email\",\n    margin: \"dense\",\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({}, register('name', {\n    'required': true,\n    minLength: 5,\n    maxLength: 20\n  }), {\n    fullWidth: true,\n    name: \"name\" // onChange={handleChange}\n    ,\n    variant: \"filled\",\n    label: \"Full Name\",\n    margin: \"dense\",\n    className: classes.textField,\n    InputProps: {\n      endAdornment: (errors === null || errors === void 0 ? void 0 : errors.name) ? errorIcon : ((_formState$touched2 = formState.touched) === null || _formState$touched2 === void 0 ? void 0 : _formState$touched2.name) && validIcon\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({\n    fullWidth: true,\n    name: \"username\" // onChange={handleChange}\n    ,\n    variant: \"filled\",\n    label: \"username\",\n    margin: \"dense\",\n    className: classes.textField,\n    autoComplete: \"username\",\n    InputProps: {\n      endAdornment: (errors === null || errors === void 0 ? void 0 : errors.username) ? errorIcon : ((_formState$touched3 = formState.touched) === null || _formState$touched3 === void 0 ? void 0 : _formState$touched3.username) && validIcon\n    }\n  }, register('username', {\n    required: true,\n    minLength: 5,\n    maxLength: 20,\n    validate: async input => await validateUsername(input),\n    // accept only lowercase/uppercase letters, numbers, periods and underscores\n    pattern: /^[a-zA-Z0-9_.]*$/\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), React.createElement(TextField, Object.assign({\n    fullWidth: true\n  }, register('password', {\n    required: true,\n    minLength: 6\n  }), {\n    InputProps: {\n      startAdornment: (errors === null || errors === void 0 ? void 0 : errors.password) ? errorIcon : ((_formState$touched4 = formState.touched) === null || _formState$touched4 === void 0 ? void 0 : _formState$touched4.password) && validIcon,\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, showPassword ? React.createElement(Visibility, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }) : React.createElement(VisibilityOff, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })))\n    },\n    name: \"password\" // onChange={handleChange}\n    ,\n    variant: \"filled\",\n    label: \"password\",\n    margin: \"dense\",\n    className: classes.textField,\n    autoComplete: \"current-password\",\n    type: showPassword ? \"text\" : \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(Button, {\n    disabled: !formState.isValid || formState.isSubmitting,\n    variant: \"contained\",\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.button,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Sign Up\")), React.createElement(AuthError, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })), React.createElement(Card, {\n    className: classes.loginCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"right\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Have an account?\"), React.createElement(Link, {\n    to: \"/accounts/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    className: classes.loginButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Log In\"))))));\n}\n\nexport const AuthError = ({\n  error\n}) => {\n  return Boolean(error) && React.createElement(Typography, {\n    align: \"center\",\n    gutterBottom: true,\n    variant: \"body2\",\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, error);\n};\nexport default SignUpPage;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/pages/signup.js"],"names":["Button","Card","TextField","Typography","InputAdornment","IconButton","React","Link","SEO","useSignUpPageStyles","LoginWithFacebook","Visibility","VisibilityOff","HighlightOff","CheckCircleOutline","AuthContext","useHistory","isEmail","CHECK_IF_USERNAME_TAKEN","useApolloClient","useForm","SignUpPage","client","classes","signUpWithEmailAndPassword","useContext","history","error","setError","useState","register","handleSubmit","formState","errors","mode","onSubmit","data","push","console","handleError","showPassword","setShowPassword","handleClickShowPassword","event","preventDefault","message","includes","code","validateUsername","username","variables","response","query","isUsernameValid","users","length","errorIcon","color","height","width","validIcon","section","card","cardHeader","cardHeaderSubHeader","orContainer","orLine","validate","input","endAdornment","email","touched","textField","minLength","maxLength","name","required","pattern","startAdornment","password","isValid","isSubmitting","button","loginCard","loginButton","AuthError","Boolean"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Card,\n  TextField,\n  Typography,\n  InputAdornment,\n  IconButton,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SEO from \"../components/shared/Seo\";\nimport { useSignUpPageStyles } from \"../styles\";\nimport { LoginWithFacebook } from \"./login\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { HighlightOff, CheckCircleOutline } from \"@material-ui/icons\";\nimport { AuthContext } from \"../auth\";\nimport { useHistory } from \"react-router-dom\";\nimport isEmail from \"validator/lib/isEmail\";\nimport { CHECK_IF_USERNAME_TAKEN } from \"../graphql/queries\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\n\n\n\nfunction SignUpPage() {\n  const client = useApolloClient();\n  const classes = useSignUpPageStyles();\n  const { signUpWithEmailAndPassword } = React.useContext(AuthContext);\n  const history = useHistory();\n  const [error, setError] = React.useState('');\n  const { register, handleSubmit, formState, errors } = useForm({\n    mode: \"onBlur\",\n  });\n\n\n  const onSubmit = async (data) => {\n    // console.log({ data });\n    try {\n      setError(\"\");\n      await signUpWithEmailAndPassword(data);\n      history.push(\"/\");\n    } catch (error) {\n      console.error(\"Error signing up\", error);\n      // setError(error.message);\n      handleError(error);\n    }\n  }\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = (event) => {\n    event.preventDefault();\n    setShowPassword(!showPassword)\n  }\n\n  const handleError = (error) => {\n    if (error.message.includes(\"users_username_key\")) {\n      setError(\"Username already taken\");\n    } else if (error.code.includes(\"auth\")) {\n      setError(error.message);\n    }\n  }\n\n  async function validateUsername(username) {\n    const variables = { username };\n    const response = await client.query({\n      query: CHECK_IF_USERNAME_TAKEN,\n      variables,\n    });\n    const isUsernameValid = response.data.users.length === 0;\n    return isUsernameValid;\n  }\n\n  const errorIcon = (\n    <InputAdornment>\n      <HighlightOff style={{ color: \"red\", height: 30, width: 30 }} />\n    </InputAdornment>\n  );\n\n  const validIcon = (\n    <InputAdornment>\n      <CheckCircleOutline style={{ color: \"#ccc\", height: 30, width: 30 }} />\n    </InputAdornment>\n  );\n\n  return (\n    <>\n      <SEO title=\"Login\" />\n      <section className={classes.section}>\n        <article>\n          <Card className={classes.card}>\n            <div className={classes.cardHeader} />\n            <Typography className={classes.cardHeaderSubHeader}>\n              Sign up to see photos and videos from your friends.\n            </Typography>\n            <LoginWithFacebook color=\"secondary\" iconColor=\"blue\" />\n            <div className={classes.orContainer}>\n              <div className={classes.orLine} />\n              <div>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  OR\n                </Typography>\n              </div>\n              <div className={classes.orLine} />\n            </div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <TextField\n                {...register('email', {\n                  'required': true,\n                  validate: (input) => isEmail(input),\n                })}\n                name=\"email\"\n                InputProps={{\n                  endAdornment: errors && errors?.email\n                    ? errorIcon\n                    : formState.touched?.email && validIcon,\n                }}\n                fullWidth\n                variant=\"filled\"\n                label=\"Email\"\n                type=\"email\"\n                margin=\"dense\"\n                className={classes.textField}\n              />\n              <TextField\n                {...register('name', {\n                  'required': true,\n                  minLength: 5,\n                  maxLength: 20,\n                })}\n                fullWidth\n                name=\"name\"\n                // onChange={handleChange}\n                variant=\"filled\"\n                label=\"Full Name\"\n                margin=\"dense\"\n                className={classes.textField}\n                InputProps={{\n                  endAdornment: errors?.name\n                    ? errorIcon\n                    : formState.touched?.name && validIcon,\n                }}\n              />\n              <TextField\n                fullWidth\n                name=\"username\"\n                // onChange={handleChange}\n                variant=\"filled\"\n                label=\"username\"\n                margin=\"dense\"\n                className={classes.textField}\n                autoComplete=\"username\"\n                InputProps={{\n                  endAdornment: errors?.username\n                    ? errorIcon\n                    : formState.touched?.username && validIcon,\n                }}\n                {...register('username', {\n                  required: true,\n                  minLength: 5,\n                  maxLength: 20,\n                  validate: async (input) => await validateUsername(input),\n                  // accept only lowercase/uppercase letters, numbers, periods and underscores\n                  pattern: /^[a-zA-Z0-9_.]*$/,\n                })}\n              />\n              <TextField\n                fullWidth\n                {...register('password', {\n                  required: true,\n                  minLength: 6,\n                })}\n                InputProps={{\n                  startAdornment: errors?.password\n                    ? errorIcon\n                    : formState.touched?.password && validIcon,\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n                name=\"password\"\n                // onChange={handleChange}\n                variant=\"filled\"\n                label=\"password\"\n                margin=\"dense\"\n                className={classes.textField}\n                autoComplete=\"current-password\"\n                type={showPassword ? \"text\" : \"password\"}\n              />\n              <Button\n                disabled={!formState.isValid || formState.isSubmitting}\n                variant=\"contained\"\n                fullWidth\n                color=\"primary\"\n                className={classes.button}\n                type=\"submit\"\n              >\n                Sign Up\n              </Button>\n            </form>\n            <AuthError error={error} />\n          </Card>\n          <Card className={classes.loginCard}>\n            <Typography align=\"right\" variant=\"body2\">\n              Have an account?\n            </Typography>\n            <Link to=\"/accounts/login\">\n              <Button color=\"primary\" className={classes.loginButton}>\n                Log In\n              </Button>\n            </Link>\n          </Card>\n        </article>\n      </section>\n    </>\n  )\n}\n\nexport const AuthError = ({ error }) => {\n  return (\n    Boolean(error) && (\n      <Typography\n        align=\"center\"\n        gutterBottom\n        variant=\"body2\"\n        style={{ color: \"red\" }}\n      >\n        {error}\n      </Typography>\n    )\n  );\n}\n\nexport default SignUpPage;\n"]},"metadata":{},"sourceType":"module"}