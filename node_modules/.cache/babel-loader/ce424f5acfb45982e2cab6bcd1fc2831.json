{"ast":null,"code":"var _jsxFileName = \"/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/App.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport FeedPage from \"./pages/feed\";\nimport ExplorePage from \"./pages/explore\";\nimport ProfilePage from \"./pages/profile\";\nimport PostPage from \"./pages/post\";\nimport EditProfilePage from \"./pages/edit-profile\";\nimport LoginPage from \"./pages/login\";\nimport SignUpPage from \"./pages/signup\";\nimport NotFoundPage from \"./pages/not-found\";\nimport PostModal from \"./components/post/PostModal\";\nimport { AuthContext } from \"./auth\";\nimport createApolloClient from \"./graphql/client\";\nimport { useSubscription } from \"@apollo/client\";\nimport { ME } from \"./graphql/subscriptions\";\nimport LoadingScreen from \"./components/shared/LoadingScreen\";\nexport const UserContext = React.createContext();\n\nfunction App() {\n  var _location$state;\n\n  const {\n    authState\n  } = React.useContext(AuthContext);\n  const isAuth = authState.status === \"in\";\n  const userId = isAuth ? authState.user.uid : null;\n  console.log('userId', userId);\n  const variables = {\n    userId\n  };\n  console.log('variables', variables);\n  const {\n    data,\n    loading\n  } = useSubscription(ME, {\n    variables,\n    fetchPolicy: \"no-cache\"\n  });\n  const history = useHistory();\n  const location = useLocation();\n  const prevLocation = React.useRef(location);\n  const modal = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.modal;\n  console.log('auth', authState);\n  React.useEffect(() => {\n    if (history.action !== 'POP' && !modal) {\n      prevLocation.current = location;\n    }\n  }, [location, modal, history.action]);\n  if (loading) return React.createElement(LoadingScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n  console.log('data', data);\n\n  if (!isAuth) {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/accounts/login\",\n      component: LoginPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/accounts/emailsignup\",\n      component: SignUpPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/accounts/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n  if (data) {\n    console.log('data, ', data);\n    const isModalOpen = modal && prevLocation.current !== location;\n    const me = isAuth && data ? data.users[0] : null;\n    const currentUserId = me.id;\n    const followingIds = me.following.map(({\n      user\n    }) => user.id);\n    const followerIds = me.followers.map(({\n      user\n    }) => user.id);\n    const feedIds = [...followingIds, currentUserId];\n    return React.createElement(UserContext.Provider, {\n      value: {\n        me,\n        currentUserId,\n        followerIds,\n        followingIds,\n        feedIds\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      location: isModalOpen ? prevLocation.current : location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: FeedPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/explore\",\n      component: ExplorePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/:username\",\n      component: ProfilePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/p/:postId\",\n      component: PostPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/accounts/edit\",\n      component: EditProfilePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/accounts/login\",\n      component: LoginPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/accounts/emailsignup\",\n      component: SignUpPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"*\",\n      component: NotFoundPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), isModalOpen && React.createElement(Route, {\n      exact: true,\n      path: \"/p/:postId\",\n      component: PostModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(LoadingScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jia78/Desktop/nyu-mscs/9223-cloud-computing/cloud-computing-proj/cloud-computing-proj/src/App.js"],"names":["React","Switch","Route","Redirect","useHistory","useLocation","FeedPage","ExplorePage","ProfilePage","PostPage","EditProfilePage","LoginPage","SignUpPage","NotFoundPage","PostModal","AuthContext","createApolloClient","useSubscription","ME","LoadingScreen","UserContext","createContext","App","authState","useContext","isAuth","status","userId","user","uid","console","log","variables","data","loading","fetchPolicy","history","location","prevLocation","useRef","modal","state","useEffect","action","current","isModalOpen","me","users","currentUserId","id","followingIds","following","map","followerIds","followers","feedIds"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,UAAlC,EAA8CC,WAA9C,QAAiE,kBAAjE;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,EAAT,QAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAEA,OAAO,MAAMC,WAAW,GAAGpB,KAAK,CAACqB,aAAN,EAApB;;AAGP,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAgBvB,KAAK,CAACwB,UAAN,CAAiBT,WAAjB,CAAtB;AACA,QAAMU,MAAM,GAAGF,SAAS,CAACG,MAAV,KAAqB,IAApC;AACA,QAAMC,MAAM,GAAGF,MAAM,GAAGF,SAAS,CAACK,IAAV,CAAeC,GAAlB,GAAwB,IAA7C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACA,QAAMK,SAAS,GAAG;AAAEL,IAAAA;AAAF,GAAlB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,SAAzB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBjB,eAAe,CAACC,EAAD,EAAK;AAAEc,IAAAA,SAAF;AAAaG,IAAAA,WAAW,EAAE;AAA1B,GAAL,CAAzC;AAEA,QAAMC,OAAO,GAAGhC,UAAU,EAA1B;AACA,QAAMiC,QAAQ,GAAGhC,WAAW,EAA5B;AACA,QAAMiC,YAAY,GAAGtC,KAAK,CAACuC,MAAN,CAAaF,QAAb,CAArB;AACA,QAAMG,KAAK,sBAAGH,QAAQ,CAACI,KAAZ,oDAAG,gBAAgBD,KAA9B;AAEAV,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBR,SAApB;AAEAvB,EAAAA,KAAK,CAAC0C,SAAN,CAAgB,MAAM;AACpB,QAAIN,OAAO,CAACO,MAAR,KAAmB,KAAnB,IAA4B,CAACH,KAAjC,EAAwC;AACtCF,MAAAA,YAAY,CAACM,OAAb,GAAuBP,QAAvB;AACD;AACF,GAJD,EAIG,CAACA,QAAD,EAAWG,KAAX,EAAkBJ,OAAO,CAACO,MAA1B,CAJH;AAMA,MAAIT,OAAJ,EAAa,OAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACbJ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,IAApB;;AACA,MAAI,CAACR,MAAL,EAAa;AACX,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,SAAS,EAAEd,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,uBAAZ;AAAoC,MAAA,SAAS,EAAEC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAED,MAAIqB,IAAJ,EAAU;AACRH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,IAAtB;AACA,UAAMY,WAAW,GAAGL,KAAK,IAAIF,YAAY,CAACM,OAAb,KAAyBP,QAAtD;AACA,UAAMS,EAAE,GAAGrB,MAAM,IAAIQ,IAAV,GAAiBA,IAAI,CAACc,KAAL,CAAW,CAAX,CAAjB,GAAiC,IAA5C;AACA,UAAMC,aAAa,GAAGF,EAAE,CAACG,EAAzB;AACA,UAAMC,YAAY,GAAGJ,EAAE,CAACK,SAAH,CAAaC,GAAb,CAAiB,CAAC;AAAExB,MAAAA;AAAF,KAAD,KAAcA,IAAI,CAACqB,EAApC,CAArB;AACA,UAAMI,WAAW,GAAGP,EAAE,CAACQ,SAAH,CAAaF,GAAb,CAAiB,CAAC;AAAExB,MAAAA;AAAF,KAAD,KAAcA,IAAI,CAACqB,EAApC,CAApB;AACA,UAAMM,OAAO,GAAG,CAAC,GAAGL,YAAJ,EAAkBF,aAAlB,CAAhB;AAEA,WACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEF,QAAAA,EAAF;AAAME,QAAAA,aAAN;AAAqBK,QAAAA,WAArB;AAAkCH,QAAAA,YAAlC;AAAgDK,QAAAA;AAAhD,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEV,WAAW,GAAGP,YAAY,CAACM,OAAhB,GAA0BP,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAE/B,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAEC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,SAAS,EAAEC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,SAAS,EAAEC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,gBAAZ;AAA6B,MAAA,SAAS,EAAEC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,SAAS,EAAEC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,uBAAZ;AAAoC,MAAA,SAAS,EAAEC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,EAWGgC,WAAW,IAAI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,SAAS,EAAE/B,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXlB,CADF;AAeD;;AACD,SAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAGD;;AAED,eAAeQ,GAAf","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect, useHistory, useLocation } from \"react-router-dom\"\nimport FeedPage from \"./pages/feed\"\nimport ExplorePage from \"./pages/explore\"\nimport ProfilePage from \"./pages/profile\"\nimport PostPage from \"./pages/post\"\nimport EditProfilePage from \"./pages/edit-profile\";\nimport LoginPage from \"./pages/login\";\nimport SignUpPage from \"./pages/signup\";\nimport NotFoundPage from \"./pages/not-found\";\nimport PostModal from \"./components/post/PostModal\";\nimport { AuthContext } from \"./auth\";\nimport createApolloClient from \"./graphql/client\";\nimport { useSubscription } from \"@apollo/client\";\nimport { ME } from \"./graphql/subscriptions\";\nimport LoadingScreen from \"./components/shared/LoadingScreen\";\n\nexport const UserContext = React.createContext();\n\n\nfunction App() {\n  const { authState } = React.useContext(AuthContext);\n  const isAuth = authState.status === \"in\";\n  const userId = isAuth ? authState.user.uid : null;\n  console.log('userId', userId);\n  const variables = { userId };\n  console.log('variables', variables);\n  const { data, loading } = useSubscription(ME, { variables, fetchPolicy: \"no-cache\" });\n\n  const history = useHistory();\n  const location = useLocation();\n  const prevLocation = React.useRef(location);\n  const modal = location.state?.modal;\n\n  console.log('auth', authState)\n\n  React.useEffect(() => {\n    if (history.action !== 'POP' && !modal) {\n      prevLocation.current = location;\n    }\n  }, [location, modal, history.action]);\n\n  if (loading) return <LoadingScreen />\n  console.log('data', data);\n  if (!isAuth) {\n    return (\n      <Switch>\n        <Route path=\"/accounts/login\" component={LoginPage} />\n        <Route path=\"/accounts/emailsignup\" component={SignUpPage} />\n        <Redirect to=\"/accounts/login\" />\n      </Switch>\n    );\n  }\n\n  if (data) {\n    console.log('data, ', data);\n    const isModalOpen = modal && prevLocation.current !== location;\n    const me = isAuth && data ? data.users[0] : null;\n    const currentUserId = me.id;\n    const followingIds = me.following.map(({ user }) => user.id)\n    const followerIds = me.followers.map(({ user }) => user.id);\n    const feedIds = [...followingIds, currentUserId];\n\n    return (\n      <UserContext.Provider value={{ me, currentUserId, followerIds, followingIds, feedIds }}>\n        <Switch location={isModalOpen ? prevLocation.current : location}>\n          <Route exact path=\"/\" component={FeedPage} />\n          <Route path=\"/explore\" component={ExplorePage} />\n          <Route exact path=\"/:username\" component={ProfilePage} />\n          <Route exact path=\"/p/:postId\" component={PostPage} />\n          <Route path=\"/accounts/edit\" component={EditProfilePage} />\n          <Route path=\"/accounts/login\" component={LoginPage} />\n          <Route path=\"/accounts/emailsignup\" component={SignUpPage} />\n          <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n        {isModalOpen && <Route exact path=\"/p/:postId\" component={PostModal} />}\n      </UserContext.Provider>\n    )\n  }\n  return <LoadingScreen />\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}